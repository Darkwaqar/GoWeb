@using SevenSpikes.Nop.Plugins.MegaMenu.Models
@using Nop.Services.Catalog;
@using Nop.Services.Media;
@using Nop.Core;
@using Nop.Core.Infrastructure;

@model MenuItemCategoryModel

@{
    var areCategoriesInASingleItem = Model.Item.EntityId == 0;
    var hasSubCategories = Model.Categories.Count > 0;
    var hasSublistClass = hasSubCategories ? "has-sublist" : string.Empty;
    var withSubcategoriesClass = hasSubCategories ? "with-subcategories" : string.Empty;
}

<li class="@hasSublistClass @Model.Item.CssClass">

    @if (areCategoriesInASingleItem)
    {
        <span class="@withSubcategoriesClass single-item-categories labelfornextplusbutton">@Model.Item.Title</span>
    }
    else
    {
	if (hasSublistClass != null)
        {
            <a class="@withSubcategoriesClass" onclick="func(@Model.Item.Id)" ><span>@Model.Item.Title</span></a>
        } else {
            <a class="@withSubcategoriesClass" href="@Model.Item.Url"><span>@Model.Item.Title</span></a>
        }
    }

    @if (hasSubCategories)
    {
        @*<div class="plus-button"></div>*@
        <div onclick="func(@Model.Item.Id)" class="circle-plus subcategories-@Model.Item.Id closed">
            <div class="circle">
                <div class="horizontal"></div>
                <div class="vertical"></div>
            </div>
        </div>
        <div class="sublist-wrap box-@Model.Item.Id subcategories-@Model.Item.Id">
            <ul class="sublist">
                <li class="back-button">
                    <span>@T("SevenSpikes.MegaMenu.ResponsiveBackButton")</span>
                </li>
                @CreateSubLists(Model.Categories)
            </ul>
            <div class="subcat-banner">
                @if (Model.Categories.Count > 0)
                {
                    var categories = EngineContext.Current.Resolve<ICategoryService>().GetCategoryById(
                        Model.Categories.FirstOrDefault().CategoryModel.Id).AlternativePictureId;
                    var ImageURl = EngineContext.Current.Resolve<IPictureService>().GetPictureUrl(categories);
                    @*<img src="@ImageURl" />*@
                }

                @* @Html.Widget("home_page_main_slider33")*@
            </div>
        </div>
    }

</li>

@helper CreateSubLists(IList<MegaMenuCategoryModel> category)
{
    foreach (var subCategory in category)
    {

        if (subCategory.SubCategories.Count > 0)
        {
            var pic = EngineContext.Current.Resolve<ICategoryService>().GetCategoryById(subCategory.CategoryModel.Id);
            <li class="has-sublist">
                <a href="@Url.RouteUrl("Category", new { SeName = subCategory.CategoryModel.SeName })" title="@subCategory.CategoryModel.Name" class="with-subcategories"><span>@subCategory.CategoryModel.Name</span></a>
                @*<div class="plus-button"></div>*@
                <div class="circle-plus closed">
                    <div class="circle">
                        <div class="horizontal"></div>
                        <div class="vertical"></div>
                    </div>
                </div>
                <div class="sublist-wrap">
                    <ul class="sublist">
                        <li class="back-button">
                            <span>@T("SevenSpikes.MegaMenu.ResponsiveBackButton")</span>
                        </li>
                        @CreateSubLists(subCategory.SubCategories)
                        @if (subCategory.ShouldShowViewAllLink)
                        {
                            <li>
                                <a class="view-all" href="@Url.RouteUrl("Category", new {subCategory.CategoryModel.SeName})" title="@T("SevenSpikes.MegaMenu.ViewAllCategories")">
                                    <span>@T("SevenSpikes.MegaMenu.ViewAllCategories")</span>
                                </a>
                            </li>
                        }
                    </ul>

                </div>
            </li>
        }
        else
        {
            <li>
                <a class="lastLevelCategory" href="@Url.RouteUrl("Category", new {SeName = subCategory.CategoryModel.SeName})" title="@subCategory.CategoryModel.Name"><span>@subCategory.CategoryModel.Name</span></a>
            </li>
        }
    }
}