@model CouponListModel
@using Nop.Core.Domain.Affiliates;
@using Nop.Services

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Coupons").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Coupons");
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Coupons")
        </h1>
        <div class="pull-right">
            <a href="@Url.Action("Create")" class="btn bg-blue">
                <i class="fa fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>

            <button type="button" name="generatecoupon" class="btn bg-olive" data-toggle="modal" data-target="#generatecoupon-window">
                <i class="fa fa-copy"></i>
                @T("Admin.Catalog.GenerateBulkCoupon.Generate")
            </button>
            <button type="submit" name="download-coupon-pdf" class="btn bg-purple">
                <i class="fa fa-file-pdf-o"></i>
                @T("Admin.Catalog.Products.List.DownloadPDF")
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fa fa-download"></i>
                    @T("Admin.Common.Export")
                </button>
                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                    <span class="caret"></span>
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <button type="submit" name="exportxml-all">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.ExportToXml.All")
                        </button>
                    </li>
                    <li>
                        <button type="button" id="exportxml-selected">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.ExportToXml.Selected")
                        </button>
                    </li>
                    <li class="divider"></li>
                    <li>
                        <button type="submit" name="exportexcel-all">
                            <i class="fa fa-file-excel-o"></i>
                            @T("Admin.Common.ExportToExcel.All")
                        </button>
                    </li>
                    <li>
                        <button type="button" id="exportexcel-selected">
                            <i class="fa fa-file-excel-o"></i>
                            @T("Admin.Common.ExportToExcel.Selected")
                        </button>
                    </li>
                </ul>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fa fa-file-code-o"></i>
                    @T("Admin.Common.Import")
                </button>
                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                    <span class="caret"></span>
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <button type="button" name="importexcel" data-toggle="modal" data-target="#importexcel-window">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.Import.Nop")
                        </button>
                    </li>
                    <li>
                        <button type="button" name="importcsv" data-toggle="modal" data-target="#importcsv-window">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.Import.Woocommerce")
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.ActivatedId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownListFor(model => model.ActivatedId, Model.ActivatedList)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.CouponCode)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.CouponCode)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.RecipientName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.RecipientName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-4">
                                        <button type="button" id="search-giftcards" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="giftcards-grid"></div>

                        <script>
                        $(document).ready(function () {
                            $("#giftcards-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("CouponList", "Coupon"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [{
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                },{
                                    field: "AmountStr",
                                    title: "@T("Admin.Coupons.Fields.Amount")"
                                }, {
                                    field: "RemainingAmountStr",
                                    title: "@T("Admin.Coupons.Fields.RemainingAmount")"
                                }, {
                                    field: "CouponCouponCode",
                                    title: "@T("Admin.Coupons.Fields.CouponCouponCode")"
                                }, {
                                    field: "SenderName",
                                    title: "@T("Admin.Coupons.Fields.SenderName")"
                                }, {
                                    field: "IsCouponActivated",
                                    title: "@T("Admin.Coupons.Fields.IsCouponActivated")",
                                    width: 200,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '# if(IsCouponActivated) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                }, {
                                    field: "CreatedOn",
                                    title: "@T("Admin.Coupons.Fields.CreatedOn")",
                                    width: 200,
                                    type: "date",
                                    format: "{0:G}"
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.Common.Edit")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<a class="btn btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                }]
                            });
                        });
                        </script>


                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
                        var selectedIds = [];

                        $(document).ready(function () {
                            $('#search-giftcards').click(function () {
                                var grid = $('#giftcards-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                //clear selected checkboxes
                                $('.checkboxGroups').attr('checked', false).change();
                                selectedIds = [];
                                return false;
                            });

                            $("#@Html.FieldIdFor(model => model.CouponCode)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-giftcards").click();
                                return false;
                            }
                            });

                            $('#mastercheckbox').click(function () {
                                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                            });

                            //wire up checkboxes.
                            $('#giftcards-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
                                var $check = $(this);
                                if ($check.is(":checked") == true) {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked == -1) {
                                        //add id to selectedIds.
                                        selectedIds.push($check.val());
                                    }
                                }
                                else {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked > -1) {
                                        //remove id from selectedIds.
                                        selectedIds = $.grep(selectedIds, function (item, index) {
                                            return item != $check.val();
                                        });
                                    }
                                }
                                updateMasterCheckbox();
                            });
                        });

                        function additionalData() {
                            var data = {
                                ActivatedId: $('#@Html.FieldIdFor(model => model.ActivatedId)').val(),
                                CouponCode: $('#@Html.FieldIdFor(model => model.CouponCode)').val(),
                                RecipientName: $('#@Html.FieldIdFor(model => model.RecipientName)').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                        function onDataBound(e) {
                            $('#giftcards-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
                                var currentId = $(this).val();
                                var checked = jQuery.inArray(currentId, selectedIds);
                                //set checked based on if current checkbox's value is in selectedIds.
                                $(this).attr('checked', checked > -1);
                            });

                            updateMasterCheckbox();
                        }

                        function updateMasterCheckbox() {
                            var numChkBoxes = $('#giftcards-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                            var numChkBoxesChecked = $('#giftcards-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                        }
    </script>

}

<div id="generatecoupon-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="generatecoupon-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="generatecoupon-window-title">@T("Admin.Catalog.Products.Copy")</h4>
            </div>
            @using (Html.BeginForm("GenerateBulkCoupon", "Coupon"))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.NopLabelFor(model => model.GenerateCouponBulkModel.NumberOfCoupon)
                            </div>
                            <div class="col-md-8">
                                @Html.NopEditorFor(model => model.GenerateCouponBulkModel.NumberOfCoupon)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.NopLabelFor(model => model.GenerateCouponBulkModel.CouponTypeId)
                            </div>
                            <div class="col-md-8">
                                @Html.NopDropDownListFor(model => model.GenerateCouponBulkModel.CouponTypeId, ((CouponType)Model.GenerateCouponBulkModel.CouponTypeId).ToSelectList())
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.NopLabelFor(model => model.GenerateCouponBulkModel.Amount)
                            </div>
                            <div class="col-md-8">
                                @Html.NopEditorFor(model => model.GenerateCouponBulkModel.Amount, Model.GenerateCouponBulkModel.PrimaryStoreCurrencyCode)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.NopLabelFor(model => model.GenerateCouponBulkModel.SenderName)
                            </div>
                            <div class="col-md-8">
                                @Html.NopEditorFor(model => model.GenerateCouponBulkModel.SenderName)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.NopLabelFor(model => model.GenerateCouponBulkModel.Message)
                            </div>
                            <div class="col-md-8">
                                @Html.NopEditorFor(model => model.GenerateCouponBulkModel.Message)
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Catalog.GenerateBulkCoupon.Generate")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@*import products form*@
<div id="importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("ImportExcel", "Coupon", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Catalog.Products.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@*export selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportXmlSelected", "Coupon", FormMethod.Post, new { id = "export-xml-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#exportxml-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-xml-selected-form #selectedIds').val(ids);
            $('#export-xml-selected-form').submit();
            return false;
        });
    });
</script>

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportExcelSelected", "Coupon", FormMethod.Post, new { id = "export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-excel-selected-form #selectedIds').val(ids);
            $('#export-excel-selected-form').submit();
            return false;
        });
    });
</script>
