@model SpecificationAttributeOptionModel

@{
    Html.AddScriptParts("~/Administration/Scripts/farbtastic.js");
    Html.AddCssFileParts("~/Administration/Content/farbtastic/farbtastic.css");
}

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.SpecificationAttributeId)

@{
    //pre-set some color (required for farbtastic)
    if (String.IsNullOrEmpty(Model.ColorSquaresRgb))
    {
        Model.ColorSquaresRgb = "#FFFFFF";
    }
}

@if (ViewBag.RefreshPage == true)
{
    <script type="text/javascript">
        try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
        catch (e){}
        window.close();
    </script>
}

<script type="text/javascript">
    $(document).ready(function() {
        $("#@Html.FieldIdFor(model => model.EnableColorSquaresRgb)").click(toggleEnableColorSquaresRgb);
        toggleEnableColorSquaresRgb();
    });

    function toggleEnableColorSquaresRgb() {
        if ($('#@Html.FieldIdFor(model => model.EnableColorSquaresRgb)').is(':checked')) {
            $('#pnlColorSquaresRgb').show();
        } else {
            $('#pnlColorSquaresRgb').hide();
        }
    }
</script>


<div class="content">
    <div class="form-horizontal">
        <div id="specificationattribute-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Catalog.Attributes.SpecificationAttributes.Info"), true)
               @if (Model.Id > 0)
               {
                @Html.RenderBootstrapTabHeader("tab-used-by-products", @T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts"))
               }
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabContent("tab-used-by-products", @TabUsedByProducts())
                }
            </div>
        </div>
    </div>
</div>


@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default panel-popup">
            <div class="panel-body">
                @(Html.LocalizedEditor<SpecificationAttributeOptionModel, SpecificationAttributeOptionLocalizedModel>("specificationattribute-localized",
                    @<div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.Locales[item].Name)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.Locales[item].Name)
                                @Html.ValidationMessageFor(model => model.Locales[item].Name)
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.Locales[item].LanguageId)
                    </div>
    ,
                    @<div>
                        <div class="form-group">
                            <div class="col-sm-3">
                                @Html.NopLabelFor(model => model.Name)
                            </div>
                            <div class="col-sm-9">
                                @Html.NopEditorFor(model => model.Name, required: true)
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>
                    </div>
    ))
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.EnableColorSquaresRgb)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.EnableColorSquaresRgb)
                        @Html.ValidationMessageFor(model => model.EnableColorSquaresRgb)
                    </div>
                </div>
                <div class="form-group" id="pnlColorSquaresRgb">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.ColorSquaresRgb)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.ColorSquaresRgb)
                        <div id="color-picker"></div>
                        <script type="text/javascript">
                                $(document).ready(function(){
                                    $('#color-picker').farbtastic('#@Html.FieldIdFor(model => model.ColorSquaresRgb)');
                                });
                        </script>
                        @Html.ValidationMessageFor(model => model.ColorSquaresRgb)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.NopLabelFor(model => model.DisplayOrder)
                    </div>
                    <div class="col-sm-9">
                        @Html.NopEditorFor(model => model.DisplayOrder)
                        @Html.ValidationMessageFor(model => model.DisplayOrder)
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@helper TabUsedByProducts()
{
var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <p>
                    @T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Hint")
                </p>
                <div id="used-by-products-grid"></div>

                <script>
                    $(document).ready(function () {
                        $("#used-by-products-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("UsedByProducts", "SpecificationAttribute", new { specificationAttributeOptionId = Model.Id }))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)],
                                @Html.Partial("_GridPagerMessages")
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [{
                                field: "ProductName",
                                title: "@T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Product")",
                                width: 400
                            }, {
                                field: "Published",
                                title: "@T("Admin.Catalog.Attributes.ProductAttributes.UsedByProducts.Published")",
                                width: 100,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                            },
                            {
                                field: "Id",
                                title: "@T("Admin.Common.View")",
                                width: 100,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '<a class="btn btn-default" href="@Url.Content("~/Admin/Product/Edit/")#=Id#"><i class="fa fa-eye"></i>@T("Admin.Common.View")</a>'
                            }]
                        });
                    });
                </script>
            </div>
        </div>
    </div>
}



        
  
