@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    <div class="add-to-cart">       
        @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
        {
            <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
        }
        @if (!Model.DisableBuyButton)
        {
            <div class="add-to-cart-panel">
                @if (Model.AllowedQuantities.Count > 0)
                {
                    <div class="qty-wrapper">
                        @Html.LabelFor(model => model.EnteredQuantity, new { @class = "qty-label" }, ":")
                        @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown" })
                    </div>
                }
                else
                {
                    Model.AllowedQuantities.Add(new SelectListItem { Text = "1", Value = "1", Selected=true });
                    Model.AllowedQuantities.Add(new SelectListItem { Text = "2", Value = "2", Selected = true });
                    Model.AllowedQuantities.Add(new SelectListItem { Text = "3", Value = "3", Selected = true });
                    Model.AllowedQuantities.Add(new SelectListItem { Text = "4", Value = "4", Selected = true });
                    <div class="qty-wrapper">
                        <div class="attr-label">
                            <label class="qty-label">Quantity</label>
                        </div>
                        <div class="attr-value">
                            @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown" })
                        </div>
                    </div>
                    @*<div class="qty-wrapper">
                        <span class="decrease">decrease</span>
                        @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty-input" })
                        <span class="increase">increase</span>
                        @*//when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)*@
                        <script type="text/javascript">
                                        $(document).ready(function () {
                                            $("#@Html.FieldIdFor(model => model.EnteredQuantity)").keydown(function (event) {
                                                if (event.keyCode == 13) {
                                                    $("#add-to-cart-button-@Model.ProductId").click();
                                                    return false;
                                                }
                                            });
                                        });
                        </script>
                    @*</div>*@
                }
                @{
                    var addToCartText = "";
                    if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                    {
                        addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                    }
                    else
                    {
                        addToCartText = T("ShoppingCart.AddToCart").Text;
                        if (Model.IsRental)
                        {
                            addToCartText = T("ShoppingCart.Rent").Text;
                        }
                        if (Model.AvailableForPreOrder)
                        {
                            addToCartText = T("ShoppingCart.PreOrder").Text;
                        }
                    }
                    <button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" ><span>@addToCartText</span></button>
                }
            </div>
        }
        @Html.Widget("productdetails_add_info", Model.ProductId)
    </div>
}