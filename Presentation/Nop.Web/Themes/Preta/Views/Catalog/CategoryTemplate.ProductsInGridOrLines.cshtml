@model CategoryModel
@using Nop.Services.Catalog;
@using Nop.Services.Media;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;

    var currentcategory = EngineContext.Current.Resolve<ICategoryService>().GetCategoryById(Model.Id);
    while (currentcategory != null && currentcategory.ParentCategoryId != 0)
    {
        currentcategory = EngineContext.Current.Resolve<ICategoryService>().GetCategoryById(currentcategory.ParentCategoryId);
    };
    var VendorImage =EngineContext.Current.Resolve<IPictureService>().GetPictureUrl(currentcategory.PictureId);
    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
<div class="page category-page">
    <div class="page-title">
       
        @if (Model.DisplayCategoryBreadcrumb)
        {
            <div class="breadcrumb">
                <ul>
                    <li>
                        <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    </li>
                    @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                        <li>
                            @if (isLastCategory)
                            {
                                <strong class="current-item">@cat.Name</strong>
                            }
                            else
                            {
                                <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                                <span class="delimiter">@breadcrumbDelimiter</span>
                            }
                        </li>
                    }
                </ul>
            </div>
            @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
        }
    </div>
    <div class="page-body">
        <h1 class="categories-title">@Model.Name</h1>
        @Html.Widget("categorydetails_top", Model.Id)
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="category-description">
                @Html.Raw(Model.Description)
            </div>
        }
        
        @Html.Widget("categorydetails_before_subcategories", Model.Id)
        @*subcategories*@
        @*@if (Model.SubCategories.Count > 0)
        {
            <div class="category-grid sub-category-grid">
                <div class="item-grid">
                    @foreach (var item in Model.SubCategories)
                    {
                        <div class="item-box">
                            <div class="sub-category-item">
                                <div class="picture">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                        <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                    </a>
                                </div>
                                <div class="content-wrapper">
                                    <h2 class="title">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                            @item.Name
                                        </a>
                                    </h2>

                                    @Html.Widget("prisma_itembox_subcategories", item.Id)
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }*@
        @*@Html.Widget("categorydetails_before_featured_products", Model.Id)*@
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>
                <div class="item-grid">
                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                </div>
            </div>
        }
        @Html.Widget("categorydetails_after_featured_products", Model.Id)
        @if (Model.Products.Count > 0)
        {
            <div class="product-selectors">
                @*view mode*@
                @if (!pager.IsEmpty())
                {
                    <div class="pager">
                        @pager
                    </div>
                }
                @if (Model.PagingFilteringContext.AllowProductViewModeChanging)
                {

                    <div class="product-viewmode">
                        <span>@T("Catalog.ViewMode")</span>
                        @if (Model.PagingFilteringContext.AvailableViewModes.Count > 1)
                    {
                        var gridMode = Model.PagingFilteringContext.AvailableViewModes[0];
                        var listMode = Model.PagingFilteringContext.AvailableViewModes[1];

                            <a class="viewmode-icon grid four @if(gridMode.Selected){<text>selected</text>}" onclick="changelayout(true)" title="Four">Four</a>
                            <a class="viewmode-icon three" onclick="changelayout(false)" title="Three">Three</a>
                        }
                    </div>

                }
                @*sorting*@
                @if (Model.PagingFilteringContext.AllowProductSorting)
                {
                    <div class="product-sorting">
                        <span>@T("Catalog.OrderBy")</span>
                        @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                    </div>
                }
                @*page size*@
                @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize)
                {
                    <div class="product-page-size">
                        <span>@T("Catalog.PageSize")</span>
                        @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })
                        <span>@T("Catalog.PageSize.PerPage")</span>
                    </div>
                }
            </div>
        }
        @Html.Widget("categorydetails_before_filters", Model.Id)
        <div class="product-filters">
            @*filtering*@
            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }
            @*filtering*@
            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>
        @Html.Widget("categorydetails_before_product_list", Model.Id)

        @if (Model.Products.Count > 0)
        {
            <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                <div class="item-grid">
                    @foreach (var product in Model.Products)
                    {
                        <div class="item-box">

                            @Html.Partial("_ProductBox", product)
                        </div>
                    }
                </div>
            </div>
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @Html.Widget("categorydetails_bottom", Model.Id)
    </div>
</div>



