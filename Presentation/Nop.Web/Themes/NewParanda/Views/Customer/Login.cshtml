@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}

    @Html.Partial("_ExternalAuthentication.AssociateMessage")
    @Html.Partial("_ExternalAuthentication.Errors")
   
           

@Html.Action("TopicBlock", "Topic", new { systemName = "LoginRegistrationInfo" })
@Html.Action("ExternalMethods", "ExternalAuthentication")

<div id="bgfir" data-turbolinks-permanent="" class="bg-half first" style=""></div>
<div id="bgsec" data-turbolinks-permanent="" class="bg-half second" style=""></div>
<div class="woocommerce">
    <div class="paddedContainer grid-x align-center">
        <div class="paddedContainer__wrapper small-28 large-23">
            <div class="grid-x align-center grid-padding-x">
                <div class="cell small-28">
                    <h1 class="pageStatic__title">Sign In or register</h1>
                </div>
                <div class="woocommerce-notices-wrapper"></div>      <div class="cell small-28 large-13 paddedContainer__col">
                    <div class="paddedContainer__col__wrapper">
                        <h4 class="tc-purple">Login to your account</h4>



                        @using (Html.BeginForm(new { @class = "woocommerce-form woocommerce-form-login login" }))
                        {
                            var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);

                            if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                            {
                                <div class="message-error">@validationSummary</div>
                            }

                            if (Model.UsernamesEnabled)
                            {
                                <div class="cell small-28">
                                    @Html.LabelFor(m => m.Username, new { @class = "required" }, "*")
                                    @Html.TextBoxFor(m => m.Username, new { @class = "hollow", autofocus = "autofocus" })
                                    @Html.ValidationMessageFor(m => m.Username)
                                </div>

                            }
                            else
                            {
                                <div class="cell small-28">
                                    @Html.LabelFor(m => m.Email, new { @class = "required" }, "*")
                                    @Html.TextBoxFor(m => m.Email, new { @class = "email hollow", autofocus = "autofocus" })
                                    @Html.ValidationMessageFor(m => m.Email)
                                </div>
                            }
                            <div class="cell small-28">
                                @Html.LabelFor(m => m.Password, new { }, ":")
                                @Html.PasswordFor(m => m.Password, new { @class = "password hollow" })
                                @Html.ValidationMessageFor(m => m.Password)
                            </div>
                            @*<div class="inputs reversed">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                    <span class="forgot-password">

                                    </span>
                                </div>*@

                            <div class="cell small-28">
                                <div class="grid-x">
                                    <div class="cell small-28">
                                        @*<input class="button-1 login-button" type="submit" value="@T("Account.Login.LoginButton")" />*@
                                        <button type="submit" class="button expanded hollow" name="login" value="Login">Login</button>
                                    </div>
                                    <div class="cell small-28">

                                        @Html.RouteLink("Lost your password?", "PasswordRecovery")

                                    </div>
                                </div>
                            </div>






                        }







                    </div>
                </div>

                <div class="cell small-28 large-13 large-offset-2 paddedContainer__col">
                    <div class="paddedContainer__col__wrapper">
                        <h4 class="tc-purple">Are you a new customer?</h4>



                        @if (Model.CheckoutAsGuest)
                        {

                            <div class="new-wrapper checkout-as-guest-or-register-block">
                                <div class="title">
                                    <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                                </div>
                                <div class="text">
                                    @Html.Action("TopicBlock", "Topic", new { systemName = "CheckoutAsGuestOrRegister" })
                                </div>
                                <div class="buttons">
                                    <input type="button" class="button-1 checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                                    <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                                </div>
                            </div>



                        }
                        else
                        {



                            <div class="register">


                               


                                <div class="woocommerce-FormRow form-row">

                                    <button type="button" class="button hollow expanded" name="register" onclick="location.href='@registerUrl'" value="Register">Register</button>

                                </div>
                            </div>



                        }








                    </div>
                </div>
            </div>
        </div>
    </div>



</div>