@model OrderTotalsModel
@using Nop.Web.Models.ShoppingCart;













































<tr class="cart-subtotal">
    <th>Subtotal</th>
    <td><span class="woocommerce-Price-amount amount">@Model.SubTotal<span class="woocommerce-Price-currencySymbol"></span></span></td>
</tr>

@if (!String.IsNullOrEmpty(Model.SubTotalDiscount))
{

    <tr class="woocommerce-shipping-totals shipping">
        <th>@T("ShoppingCart.Totals.SubTotalDiscount"):</th>
        <td>
            <span class="woocommerce-Price-amount amount">@Model.SubTotalDiscount<span class="woocommerce-Price-currencySymbol"></span></span>
        </td>
    </tr>
}


@if (!Model.HideShippingTotal)
{

    <tr class="woocommerce-shipping-totals shipping">
        <th>
            @T("ShoppingCart.Totals.Shipping")
            @if (Model.RequiresShipping && !String.IsNullOrEmpty(Model.SelectedShippingMethod))
            {
                @T("ShoppingCart.Totals.Shipping.Method", Model.SelectedShippingMethod)
            }
        </th>
        <td>
            @if (Model.RequiresShipping)
            {
                if (!String.IsNullOrEmpty(Model.Shipping))
                {
                    <span class="woocommerce-Price-amount amount">@Model.Shipping</span>
                }
                else
                {
                    <span class="woocommerce-Price-amount amount">@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span>
                }
            }
            else
            {
                <span class="woocommerce-Price-amount amount">@T("ShoppingCart.Totals.Shipping.NotRequired")</span>
            }


        </td>
    </tr>
}


@if (!String.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
{

    <tr class="woocommerce-shipping-totals shipping">
        <th>@T("ShoppingCart.Totals.PaymentMethodAdditionalFee"):</th>
        <td>
            <span class="woocommerce-Price-amount amount">
                @Model.PaymentMethodAdditionalFee
            </span>
        </td>
    </tr>
}


@if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
{
    foreach (var taxRate in Model.TaxRates)
    {
        <tr class="woocommerce-shipping-totals shipping">
            <th>@string.Format(T("ShoppingCart.Totals.TaxRateLine").Text, taxRate.Rate)</th>
            <td><span class="woocommerce-Price-amount amount">@taxRate.Value</span></td>
        </tr>

    }
}

@if (Model.DisplayTax)
{

    <tr class="woocommerce-shipping-totals shipping">
        <th>@T("ShoppingCart.Totals.Tax")</th>
        <td><span class="woocommerce-Price-amount amount">@Model.Tax</span></td>
    </tr>

}


@if (!String.IsNullOrEmpty(Model.OrderTotalDiscount))
{
    <tr class="woocommerce-shipping-totals shipping">
        <th>@T("ShoppingCart.Totals.OrderTotalDiscount")</th>
        <td> <span class="woocommerce-Price-amount amount">@Model.OrderTotalDiscount</span></td>
    </tr>
}


@if (Model.GiftCards.Count > 0)
{
    foreach (var gc in Model.GiftCards)
    {
        <tr   class="woocommerce-shipping-totals shipping">
            <th>
                @T("ShoppingCart.Totals.GiftCardInfo"):
                <span>@T("ShoppingCart.Totals.GiftCardInfo.Code", gc.CouponCode)</span>
            </th>

            <td>
                @if (Model.IsEditable)
                {
                    //little hack here with empty "value" element
                    <input type="submit" name="removegiftcard-@gc.Id" value=" " title="@T("Common.Remove")" class="remove-gift-card-button" />
                }
                <span class="giftcard-remaining">@string.Format(T("ShoppingCart.Totals.GiftCardInfo.Remaining").Text, gc.Remaining)</span>

                <span class="value-summary">@gc.Amount</span>

            </td>
        </tr>
    }
}



@if (Model.RedeemedRewardPoints > 0)
{

    <tr class="woocommerce-shipping-totals shipping">
        <th>@string.Format(T("ShoppingCart.Totals.RewardPoints").Text, Model.RedeemedRewardPoints):</th>
        <td><span class="woocommerce-Price-amount amount">@Model.RedeemedRewardPointsAmount</span></td>
    </tr>

}


<tr class="order-total">
    <th>@T("ShoppingCart.Totals.OrderTotal"):</th>
    <td>
        @if (!String.IsNullOrEmpty(Model.OrderTotal))
        {
            <strong> <span class="woocommerce-Price-amount amount">@Model.OrderTotal</span></strong>
        }
        else
        {
            <strong><span class="woocommerce-Price-amount amount">@T("ShoppingCart.Totals.CalculatedDuringCheckout")</span></strong>
        }
    </td>

</tr>


@if (Model.WillEarnRewardPoints > 0)
{
    <tr class="woocommerce-shipping-totals shipping">
        <th>@T("ShoppingCart.Totals.RewardPoints.WillEarn")</th>
        <td><span class="woocommerce-Price-amount amount">@string.Format(T("ShoppingCart.Totals.RewardPoints.WillEarn.Point").Text, Model.WillEarnRewardPoints)</span></td>
    </tr>


}



