@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");

    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}





<div class="woocommerce">
    <div class="woocommerce-notices-wrapper"></div><div class="pageCheckout">
        <div class="paddedContainer grid-x">
            <div class="paddedContainer__wrapper small-28 medium-24 xlarge-offset-4 large-28 xlarge-15">
                <div class="paddedContainer__col">


                    @if (Model.Items.Count > 0)
                    {
                        if (Model.Warnings.Count > 0)
                        {
                            <div class="message-error">
                                <ul>
                                    @foreach (var warning in Model.Warnings)
                                    {
                                        <li>@warning</li>
                                    }
                                </ul>
                            </div>
                        }

                            <div class="paddedContainer__col__wrapper">



                                <div class="page-title">
                                    <h1>
                                        @if (Model.IsEditable)
                                        {
                                            @T("Wishlist")
                                        }
                                        else
                                        {
                                            @String.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname)
                                        }
                                    </h1>
                                </div>
                                @using (Html.BeginRouteForm("Wishlist", FormMethod.Post))
                                {




                                    <div id="order_review" class="woocommerce-checkout-review-order">

                                        @if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                                        {
                                            var inclTax = EngineContext.Current.Resolve<IWorkContext>
                                                                            ().TaxDisplayType == TaxDisplayType.IncludingTax;
                                            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                                            //of course, you can modify appropriate locales to include VAT info there
                                            <div class="cartNotice">
                                                @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                                            </div>
                                        }

                                        <table class="shop_table woocommerce-checkout-review-order-table">

                                            <thead>
                                                <tr>
                                                    <th class="product-name">Product</th>
                                                    <th class="product-total">Total</th>
                                                </tr>
                                            </thead>

                                            <tbody>
                                                @foreach (var item in Model.Items)
                                                {

                                                    <tr class="cart_item">
                                                        <td class="product-name">

                                                            <input type="checkbox" name="addtocart" value="@(item.Id)" />
                                                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>



                                                            @item.ProductName



                                                            <strong class="product-quantity">
                                                                ×


                                                                @if (Model.IsEditable)
                                                                {
                                                                    if (item.AllowedQuantities.Count > 0)
                                                                    {
                                                                        <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                                            @foreach (var qty in item.AllowedQuantities)
                                                                            {
                                                                                <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                                            }
                                                                        </select>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>@(item.Quantity)</span> @*name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input" />*@
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    <span class="product-quantity">@item.Quantity</span>
                                                                }




                                                            </strong>


                                                        </td>
                                                        <td class="product-total">










                                                            <span class="woocommerce-Price-amount amount">@item.SubTotal<span class="woocommerce-Price-currencySymbol"></span></span>
                                                            @if (!String.IsNullOrEmpty(item.Discount))
                                                            {
                                                                <div class="discount">
                                                                    @T("ShoppingCart.ItemYouSave", item.Discount)
                                                                </div>
                                                                if (item.MaximumDiscountedQty.HasValue)
                                                                {
                                                                    <div class="discount-additional-info">
                                                                        @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                                                    </div>
                                                                }
                                                            }


                                                            @if (Model.IsEditable)
                                                            {
                                                                <span class="remove">
                                                                    <label class="td-title"><i class="fal fa-times"></i></label>
                                                                    <input type="checkbox" name="removefromcart" value="@(item.Id)" />

                                                                </span>
                                                            }
                                                        </td>
                                                    </tr>





                                                }
                                            </tbody>
                                            <tfoot>










                                            </tfoot>
                                        </table>

                                        <div class="cart-options">
                                            @if (Model.IsEditable)
                                            {

                                                <div class="buttons">
                                                    @if (Model.IsEditable)
                                                    {
                                                        <button type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="hollow button">
                                                            @T("Wishlist.UpdateCart")
                                                        </button>
                                                    }
                                                    @if (Model.DisplayAddToCart)
                                                    {
                                                        <button type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="hollow button">@T("ShoppingCart.AddToCart") </button>
                                                    }
                                                    @if (Model.IsEditable && Model.EmailWishlistEnabled)
                                                    {
                                                        <button type="button" value="@T("Wishlist.EmailAFriend")" class="hollow button" onclick="setLocation('@Url.RouteUrl("EmailWishlist")')">
                                                            @T("Wishlist.EmailAFriend")
                                                        </button>
                                                    }
                                                </div>














                                            }
                                            @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                                            {
                                                var inclTax = EngineContext.Current.Resolve<IWorkContext>
                                                    ().TaxDisplayType == TaxDisplayType.IncludingTax;
                                                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                                                //of course, you can modify appropriate locales to include VAT info there
                                                <div class="tax-shipping-info">
                                                    @T(inclTax ? "Wishlist.TaxShipping.InclTax" : "Wishlist.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                                                </div>
                                            }
                                        </div>












                                    </div>







                                }
                            </div>















                    }
                    else
                    {
                        <div class="no-data">
                            @T("Wishlist.CartIsEmpty")
                        </div>
                    }


                    @if (Model.IsEditable && Model.Items.Count > 0)
                    {
                        @*<div class="share-info">
                            <span class="share-label">@T("Wishlist.YourWishlistURL"):</span>
                            <a href="@Url.RouteUrl("EmailWishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">@Url.RouteUrl("EmailWishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
                        </div>*@
                    }


                </div>
            </div>
        </div>
    </div>
</div>











<script>
    (function () {

        $('.remove input[type="checkbox"]').css('opacity', 0);

        $('.remove ').on('click', function () {

            $(this).find("input[type='checkbox']").attr('checked', 'checked');

            $.confirm({
                title: 'Confirmation',
                content: 'Are you sure you want to remove the item from the list?',
                buttons: {
                    confirm: function () {
                        $('.buttons button[name="updatecart"]').trigger('click');
                    },
                    cancel: function () {

                    }
                  
                }
            });

        });



    })();








</script>

