@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    string quickviewurl = Url.RouteUrl("QuickView-Product", new { productId = Model.Id });
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" data-productid="@Model.Id">

    <div class="picture">
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
            @if (Model.SecondPictureModel != null && Model.SecondPictureModel.Id > 0)
            {
                <img class="hover-img" alt="@Model.SecondPictureModel.AlternateText" src="@Model.SecondPictureModel.ImageUrl" title="@Model.SecondPictureModel.Title" />
            }
        </a>
        @if (Model.MarkAsSales)
        {
            <div class="flag">
                <label class="percent">@Model.ProductPrice.DiscountPercentage.ToString("0")%</label>
                <label class="label" >Sale</label>
            </div>
        }
        else if (Model.MarkAsNew)
        {
            <div class="flag" >
                <label class="label">New</label>
            </div>
        }
        @*<input type="button" value="@T("Products.QuickView")" title="@T("Products.QuickView")" class="quick-view-button" data-toggle="modal" data-target="ModalQuickView" onclick="AjaxCart.quickview_product('@quickviewurl')"></input>*@
       @if (!Model.ProductPrice.DisableWishlistButton)
       {
            <button title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink','@Model.ShowQty', '@Model.Id');return false;">
                @* value="@T("ShoppingCart.AddToWishlist")" *@
                <svg xmlns="http://www.w3.org/2000/svg" width="27.688" height="13.546" viewBox="0 0 27.688 13.546">
                    <g id="Icon_Shoe" data-name="Icon/Shoe" transform="translate(0.582 0.856)">
                        <path id="Path_6_shoe" data-name="Path 6 shoe" d="M265.1,283.693s-1.519,3.167-.06,8.1v2.393h5.887v-2.393a13.417,13.417,0,0,1,4.98,1.051c2.185,1.062,4.859,1.343,8.561,1.343,1.815,0,4.874-.141,5.887-.6,1.152-.519.757-4.165-2.393-4.668-4.726-.755-6.923-2.251-12.612-6.924C275.054,282.922,272.157,288.28,265.1,283.693Z" transform="translate(-264.404 -281.991)" fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="1"></path>
                        <line id="Line_4_shoe" data-name="Line 4 shoe" x2="6" transform="translate(0.538 9.8)" fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="1"></line>
                        <line id="Line_5_shoe" data-name="Line 5 shoe" y1="1.867" x2="1.653" transform="translate(11.921 2.338)" fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="1"></line>
                        <line id="Line_6_shoe" data-name="Line 6 shoe" y1="1.914" x2="1.576" transform="translate(13.942 3.924)" fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="1"></line>
                        <line id="Line_7_shoe" data-name="Line 7 shoe" y1="2.029" x2="1.591" transform="translate(15.87 5.317)" fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="1"></line>
                    </g>
                </svg>
            </button>
        @*<input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink','@Model.ShowQty', '@Model.Id');return false;" />*@

       }
    </div>
   
    <div class="details">
        <h2 class="product-title">
            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a>
        </h2>
        @if (Model.ShowSku && !string.IsNullOrEmpty(Model.Sku))
        {
            <div class="sku">
                @Model.Sku
            </div>
        }
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            int ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
            }
            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
            </div>
        }
       
        <div class="description">
            @Html.Raw(Model.ShortDescription)
        </div>
        <div class="add-info">
            @Html.Widget("productbox_addinfo_before", Model.Id)
            <div class="prices @if (Model.ProductType == ProductType.ReservationProduct) { <text>reservation-price</text> }">
                @if (Model.ProductType != ProductType.AuctionProduct)
                {
                    <div class="price actual-price">@Model.ProductPrice.Price</div>
                }
                else
                {
                    <div class="price actual-price">
                        @(Model.ProductPrice.HighestBidValue > 0 ? Model.ProductPrice.HighestBid : Model.ProductPrice.StartPrice)
                    </div>
                }
                @if (Model.ProductPrice.DiscountPercentage > 0)
                {
                    <span class="price old-price">@Model.ProductPrice.PriceWithoutDiscount</span>
                }
                else if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
                @if (!String.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                {
                    <div class="base-price-pangv">
                        @Model.ProductPrice.BasePricePAngV
                    </div>
                }
                @if (Model.ProductType == ProductType.AuctionProduct)
                {
                    if (Model.EndTime.HasValue)
                    {
                        <div class="countdown-box">
                            @if (Model.EndTime > DateTime.UtcNow)
                            {
                                <label>@T("AddToCart.Timeleft"): </label>
                                <div data-countdown="@Model.EndTime.Value.ToString("yyyy-MM-dd HH:mm UTC")"></div>
                            }
                            else
                            {
                                <div class="d-inline-flex flex-wrap justify-content-center">
                                    <label class="ended-label">@T("ShoppingCart.Auctionends"):</label>
                                    <div class="count-date">@Model.EndTimeLocalTime.Value.ToString()</div>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
            @Html.Widget("productbox_addinfo_middle", Model.Id)
            <div class="buttons">
                @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductType == ProductType.ReservationProduct)
                    {
                        addToCartText = T("ShoppingCart.Reservation").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                    <input type="button" value="@(addToCartText)" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', '@Model.ShowQty', '@Model.Id');return false;" />
                }
                else
                {
                    if (Model.ProductType == ProductType.AuctionProduct)
                    {
                        var addToCartText = T("ShoppingCart.Bids").Text;
                        <input type="button" value="@(addToCartText)" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', 'false', '@Model.Id');return false;" />
                    }
                }
                @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <input type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="button-2 add-to-compare-list-button" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" />
                }
               
            </div>
            @Html.Widget("productbox_addinfo_after", Model.Id)
        </div>
    </div>
</div>
