@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Services.Configuration;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }


    Html.AppendCssFileParts("~/Themes/HashmiKajal/Content/css/images-compare.css");

    Html.AddScriptParts("https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.min.js");
    Html.AddScriptParts("~/Themes/HashmiKajal/Content/scripts/jquery.images-compare.js");
    

    var storeId = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Id;
    var quickTabsLayout = EngineContext.Current.Resolve<ISettingService>().GetSettingByKey("tiffanythemesettings.quicktabslayout", String.Empty, storeId, true);
}
@section breadcrumbInner
{
    <!--product breadcrumb-->
    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)
    @Html.Widget("productdetails_after_breadcrumb", Model.Id)
}
<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '882985962086045');
  fbq('track', 'ViewContent');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=882985962086045&ev=PageView&noscript=1"
/></noscript>
<!-- End Facebook Pixel Code -->


<div class="page product-details-page">
    <div class="page-body">
        @Html.Widget("productdetails_top", Model.Id)
        @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "product-details-form" }))
        {
            <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                <div class="product-essential">
                    <div class="product-name">
                        <h1 itemprop="name">
                            @Model.Name
                        </h1>
                    </div>
                    @Html.Widget("productdetails_before_pictures", Model.Id)

                    @{
            var cloudZoom = Html.Widget("sevenspikes_cloud_zoom");
                    }
                    @if (!MvcHtmlString.IsNullOrEmpty(cloudZoom))
                    {
                        @cloudZoom
                    }
                    else
                    {
                        <!--product pictures-->
                        @Html.Partial("_ProductDetailsPictures", Model)
                    }

                    @Html.Widget("productdetails_after_pictures", Model.Id)
                    <div class="overview">
                        @Html.Partial("_Discontinued", Model)
                        @if (!String.IsNullOrEmpty(Model.ShortDescription))
                        {
                            <div class="short-description">
                                @Html.Raw(Model.ShortDescription)

                            </div>
                        }
                        <!--product manufacturers-->
                        @Html.Partial("_ProductManufacturers", Model.ProductManufacturers)
                        <div class="buttons">
                            @Html.Widget("productdetails_inside_overview_buttons_before", Model.Id)
                            @Html.Partial("_ProductAddToWishlistButton", Model.AddToCart)
                            @Html.Partial("_CompareProductsButton", Model)
                            @Html.Partial("_ProductEmailAFriendButton", Model)
                            @Html.Widget("productdetails_inside_overview_buttons_after", Model.Id)
                        </div>
                        @Html.Widget("productdetails_overview_top", Model.Id)
                        <!--SKU, MAN, GTIN, vendor-->
                        @Html.Partial("_SKU_Man_GTIN_Ven", Model)
                        <!--delivery-->
                        @Html.Partial("_DeliveryInfo", Model)
                        <!--availability-->
                        @Html.Partial("_Availability", Model)

                        <!--product reviews-->
                        @Html.Partial("_ProductReviewOverview", Model.ProductReviewOverview)
                        <!--sample download-->
                        @Html.Partial("_DownloadSample", Model)
                        <!--attributes-->
                        @{
                        var dataDictAttributes = new ViewDataDictionary();
                        dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                        @Html.Partial("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                        }
                        <!--rental products-->
                        @{
                        var dataDictRental = new ViewDataDictionary();
                        dataDictRental.TemplateInfo.HtmlFieldPrefix = string.Format("rental_{0}", Model.Id);
                        @Html.Partial("_RentalInfo", Model, dataDictRental)
                        }
                        <!--price & add to cart-->
                        @{
                        var dataDictPrice = new ViewDataDictionary();
                        dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                        @Html.Partial("_ProductPrice", Model.ProductPrice, dataDictPrice)

                        var dataDictAddToCart = new ViewDataDictionary();
                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                        @Html.Partial("_AddToCart", Model.AddToCart, dataDictAddToCart)
                        }

                        @Html.Partial("_ShareButton", Model)
                        @Html.Widget("productdetails_overview_bottom", Model.Id)
                    </div>
                    @if (!String.IsNullOrEmpty(Model.FullDescription))
                    {
                        <div class="full-description" itemprop="description">
                            @Html.Raw(Model.FullDescription)
                        </div>
                    }
                    <!--gift card-->
                    @{
                    var dataDictGiftCard = new ViewDataDictionary();
                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                    @Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                    }
                </div>

                <div class="wrapper-quick-tabs @quickTabsLayout">
                    @Html.Widget("productdetails_quick_tabs", Model.Id)
                </div>
                @Html.Widget("productdetails_before_collateral", Model.Id)
                <div class="product-collateral">
                    @Html.Partial("_ProductTierPrices", Model.TierPrices)
                    @Html.Partial("_ProductSpecifications", Model.ProductSpecifications)

                    <!-- Main div container -->
                    <div id="myImageCompare">
                        <!-- The first div will be the front element, to prevent FOUC add a style="display: none;" -->
                        <div style="display: none;">
                            <img src="~/Themes/HashmiKajal/Content/img/img/before_after1.jpg" alt="Before" />
                        </div>
                        <!-- This div will be the back element -->
                        <div>
                            <img src="~/Themes/HashmiKajal/Content/img/img/before_after2.jpg" alt="After" />
                        </div>
                    </div>

                    <script>
                        $(document).ready(function () {
                            $('#myImageCompare').imagesCompare();
                        })
                    </script>

                   @* @Html.Partial("_ProductTags", Model.ProductTags) *@
                </div>
                @*@Html.Action("ProductsAlsoPurchased", "Product", new { productId = Model.Id })*@
                @Html.Action("RelatedProducts", "Product", new { productId = Model.Id })
            </div>
        }
        @Html.Widget("productdetails_bottom", Model.Id)
    </div>
</div>

 @{
        var img = new List<String>();
        
        foreach (var pic in Model.PictureModels)
        {
            img.Add(pic.ThumbImageUrl);
        }
        var json = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(img));
    }

    <script type="application/ld+json">
        {
        "@@context": "https://schema.org/",
        "@@type": "Product",
        "name": "@Model.Name",
        "image": @json,
        "description": "@Html.Raw(Model.ShortDescription)",
        "sku": "@Model.Sku",
        "brand": {
        "@@type": "footwear",
        "name": "@Model.CurrentStoreName"
        }
        }
    </script>