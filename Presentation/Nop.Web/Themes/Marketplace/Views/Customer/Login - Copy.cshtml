@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}
<div class="container" style="max-width:1000px">
    <div class="row">
        <div class="col-md-12">
            <div class="page-title">
                <h1>Sign In</h1>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="returning-wrapper fieldset">
                @using (Html.BeginForm())
                {
                    var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                    <div class="title">
                        <strong>CURRENT CUSTOMER</strong>
                    </div>
                    <h6>Required Fields *</h6>
                    
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="form-fields">
                        @if (Model.UsernamesEnabled)
                        {
                            <div class="inputs">
                                @*@Html.LabelFor(m => m.Username, new { }, ":")*@
                                @Html.TextBoxFor(m => m.Username, new { @class = "username", placeholder = "User name*" })
                                @Html.ValidationMessageFor(m => m.Username)
                            </div>
                        }
                        else
                        {
                            <div class="inputs">
                                @*@Html.LabelFor(m => m.Email, new { }, ":")*@
                                @Html.TextBoxFor(m => m.Email, new { @class = "email", placeholder = "Email*" })
                                @Html.ValidationMessageFor(m => m.Email)
                            </div>
                        }
                        <div class="inputs">
                            @*@Html.LabelFor(m => m.Password, new { }, ":")*@
                            @Html.PasswordFor(m => m.Password, new { @class = "password", placeholder = "Password*", })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                        <div class="inputs reversed">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                            <span class="forgot-password">
                                @Html.RouteLink(T("Account.Login.ForgotPassword").Text, "PasswordRecovery")
                            </span>
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                        <input class="btn-1" type="submit" value="@T("Account.Login.LoginButton")" />
                    </div>

                }
            </div>
        </div>
        <div class="col-md-6" style="border-left:solid 1px #000;">
            <div class="customer-blocks">
                @if (Model.CheckoutAsGuest)
                {
                    <div class="new-wrapper checkout-as-guest-or-register-block">
                        <div class="title">
                            <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                        </div>
                        <div class="text">
                            @Html.Action("TopicBlock", "Topic", new { systemName = "CheckoutAsGuestOrRegister" })
                        </div>
                        <div class="buttons">
                            <input type="button" class="btn-1" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                            <input type="button" class="btn-1" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="new-wrapper register-block">
                        <div class="title">
                            <strong>CREATE AN ACCOUNT</strong>
                          
                        </div>
                        <p class="reg-text">
                            Save payment and shipping details, view your order history, return items, and track and share favourite pieces in wishlist.
                        </p>
                        <h6>Required Fields *</h6>
                        @Html.Partial("Register", new RegisterModel())
                        @*<div class="text">
                        @T("Account.Login.NewCustomerText")
                    </div>
                    <div class="buttons">
                        <input type="button" class="button-1 register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                    </div>*@
                    </div>
                }

            </div>
        </div>
    </div>
</div>
@*<div class="page login-page">
   
    @Html.Partial("_ExternalAuthentication.AssociateMessage")
    @Html.Partial("_ExternalAuthentication.Errors")
    <div class="page-body">
       
        <div class="external-authentication">
            @Html.Action("ExternalMethods", "ExternalAuthentication")
        </div>
        @Html.Action("TopicBlock", "Topic", new { systemName = "LoginRegistrationInfo" })
    </div>
</div>*@
