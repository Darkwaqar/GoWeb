@model CategoryModel
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}

@{
    //current category ID
    int currentCategoryId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }


    //current manufacturer ID
    int currentManufacturerId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
    }


    //current product ID
    int currentProductId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }
}
<div class="container-fluid">
    <div>
        @section Breadcrumb
{
            @if (Model.DisplayCategoryBreadcrumb)
            {

                <div class="breadcrumb">
                    <ul>
                        <li>
                            <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                            <span class="delimiter">@breadcrumbDelimiter</span>
                        </li>
                        @foreach (var cat in Model.CategoryBreadcrumb)
                        {
                            var isLastCategory = cat.Id == Model.Id;
                            <li>
                                @if (isLastCategory)
                                {
                                    <strong class="current-item">@cat.Name</strong>
                                }
                                else
                                {
                                    <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                                    <span class="delimiter">@breadcrumbDelimiter</span>
                                }
                            </li>
                        }
                    </ul>
                </div>
                @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
            }
        }

    </div>
    <div class="page text-center">
        <h1>@Model.Name </h1>
    </div>
    <div class="row">
        <div class="col-md-3 col-lg-2 no-right">
            @Html.Widget("left_side_column_before")
            @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })
            @Html.Widget("left_side_column_after_category_navigation")
            @Html.Widget("categorydetails_before_filters", Model.Id)
            <div class="product-filters">
                @*filtering*@
                @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                {
                    @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                }
                @*filtering*@
                @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                {
                    @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                }
            </div>
            @Html.Widget("categorydetails_before_product_list", Model.Id)
            @Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = currentManufacturerId })
            @Html.Action("VendorNavigation", "Catalog")
            @Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 64 })
            @Html.Action("PopularProductTags", "Catalog")
            @Html.Action("PollBlock", "Poll", new { systemKeyword = "LeftColumnPoll" })
            @Html.Widget("left_side_column_after")

        </div>
        <div class="col-md-9 col-lg-10">
            <div class="page-body">
                @Html.Widget("categorydetails_top", Model.Id)
                @*description*@
                @if (!String.IsNullOrWhiteSpace(Model.Description))
                {
                    <div class="category-description">
                        @Html.Raw(Model.Description)
                    </div>
                    <script>


                    </script>
                }
                @Html.Widget("categorydetails_before_subcategories", Model.Id)
                @*subcategories*@
              
                @Html.Widget("categorydetails_before_featured_products", Model.Id)
                @*featured products*@
                @if (Model.FeaturedProducts.Count > 0)
                {
                    <div class="product-grid featured-product-grid">
                        <div class="title">
                            <strong>@T("Products.FeaturedProducts")</strong>
                        </div>
                        <div class="item-grid">
                            @foreach (var item in Model.FeaturedProducts)
                            {
                                <div class="item-box">
                                    @Html.Partial("_ProductBox", item)
                                </div>
                            }
                        </div>
                    </div>
                }
                @Html.Widget("categorydetails_after_featured_products", Model.Id)
                @if (Model.Products.Count > 0)
                {
                    @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
                }
               

                @if (Model.Products.Count > 0)
                {
                    int count = 0;
                    <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                        <div class="row">
                            @foreach (var product in Model.Products)
                            {
                             

                                <div class="col-md-4 col-lg-4 nopadding">
                                    @Html.Partial("_ProductBox", product)
                                </div>
                            }
                        </div>
                    </div>
                }
                @{
                    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
                }
                @if (!pager.IsEmpty())
                {
                    <div class="pager">
                        @pager
                    </div>
                }
                @Html.Widget("categorydetails_bottom", Model.Id)
            </div>
        </div>
    </div>

</div>
@*category breadcrumb*@

