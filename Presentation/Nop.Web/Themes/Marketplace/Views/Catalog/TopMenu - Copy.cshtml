@model TopMenuModel
@using Nop.Web.Models.Catalog;
<style>

    .dropdown-submenu {
        position: relative;
    }

        .dropdown-submenu > .dropdown-menu {
            top: 0;
            left: 100%;
            margin-top: -1px;
            margin-left: 0px;
            -webkit-border-radius: 0 0px 2px 2px;
            -moz-border-radius: 0 0px 2px 2px;
            border-radius: 0 0px 2px 2px;
        }

        .dropdown-submenu:hover > .dropdown-menu {
            display: block;
        }

        .dropdown-submenu > a:after {
            display: block;
            content: " ";
            float: right;
            width: 0;
            height: 0;
            border-color: transparent;
            border-style: solid;
            border-width: 5px 0 5px 5px;
            border-left-color: #cccccc;
            margin-top: 5px;
            margin-right: -10px;
        }

        .dropdown-submenu:hover > a:after {
            border-left-color: #ffffff;
        }

        .dropdown-submenu.pull-left {
            float: none;
        }

            .dropdown-submenu.pull-left > .dropdown-menu {
                left: -100%;
                margin-left: 10px;
                -webkit-border-radius: 6px 0 6px 6px;
                -moz-border-radius: 6px 0 6px 6px;
                border-radius: 6px 0 6px 6px;
            }

</style>
@helper RenderCategoryLine(CategorySimpleModel category, int level)
{
    if (category.SubCategories.Count > 0)
    {
        @RenderSubCategoryLine(category, level)
    }
    else
    {
        <li >
            <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">
                @category.Name
            </a>
        </li>
    }
}

@helper RenderSubCategoryLine(CategorySimpleModel category, int level)
{
    <li class="@(level>0?"dropdown-submenu":"dropdown")">
        <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" data-toggle="dropdown">
            <span> @category.Name </span>
            @if (level == 0)
            { 
                <b class="caret"></b>
            }
            
        </a>
        <ul class="dropdown-menu ">
            @foreach (var subCategory in category.SubCategories)
            {
                @RenderCategoryLine(subCategory, level + 1)
            }
        </ul>

    </li>
}


<nav class="navbar navbar-static-top navbar-default bgDarkBlack navbar-topmenu" role="navigation" >
    <div class="container">
        @*<div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#top-menu" >
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>*@
        <div class="collapse navbar-collapse" id="top-menu" role="navigation" aria-label="Main menu" >
           

            <ul class="nav navbar-nav">
              
              
                @Html.Widget("header_menu_before")
                @{
                    var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
                }
                @foreach (var category in rootCategories)
                {
                    @RenderCategoryLine(category, 0)
                }
                @foreach (var topic in Model.Topics)
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
                @if (rootCategories.Count == 0 && Model.Topics.Count == 0)
                {
                    //no categories or topis to display? in this case let's diplay some default menu items (should we?)
                    <li><a href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
                    if (Model.RecentlyAddedProductsEnabled)
                    {
                        <li>
                            <a href="@Url.RouteUrl("RecentlyAddedProducts")">@T("Products.NewProducts")</a>
                        </li>
                    }
                    <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    if (Model.BlogEnabled)
                    {
                        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                    }
                    if (Model.ForumEnabled)
                    {
                        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                    }
                    <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                }
                @Html.Widget("header_menu_after")
            </ul>
            <div class="navbar-form navbar-right hidden-xs" role="search">
                <div class="input-group ">
                    @Html.Action("SearchBox", "Catalog")
                </div>
            </div>
        </div>
    </div>
</nav>











