@model IList<CategoryModel>

@using Nop.Web.Models.Catalog;
@using Nop.Core.Infrastructure;
@using Nop.Services.Catalog;
@using Nop.Services.Media;
@using Nop.Services.Seo;

@using Nop.Web.Factories;

@using Nop.Core.Domain.Orders

@if (Model.Count > 0)
{
    foreach (var item in Model.Take(2))
    {
        <div class="spc-wrapper">
            <div class="spc spc-categories landscape">
                <div class="spc-header" style="float:left;">
                    <div class="category-picture">
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                        </a>
                    </div>
                </div>
                <div class="spc-body">
                    <div class="category-info">
                        <h2 class="category-title">
                            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                @item.Name
                            </a>
                        </h2>
                    </div>
                    <div class="category-products">
                        <div class="product-grid active">
                            <div class="item-grid">
                                @{
                                    var cat = EngineContext.Current.Resolve<ICategoryService>().GetAllCategoriesByParentCategoryId(item.Id);
                                    if (cat.Count() > 0)
                                    {
                                        foreach (var itemSub in cat)
                                        {
                                            List<int> CategoriesId1 = new List<int>();
                                            CategoriesId1.Add(itemSub.Id);

                                            var Products1 = EngineContext.Current.Resolve<IProductService>().SearchProducts(categoryIds: CategoriesId1);
                                            var price = EngineContext.Current.Resolve<IProductModelFactory>().PrepareProductOverviewModels(Products1);

                                            if (price.Count() > 0)
                                            {
                                                foreach (var itm in price.Take(1))
                                                {
                                                    //prepare "Add to cart" AJAX link
                                                    string addtocartlink = "";
                                                    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
                                                    var quantity = 1;

                                                    /*
                                                    if (itm.ProductPrice.ForceRedirectionAfterAddingToCart)
                                                    {*/
                                                    // addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = itm.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
                                                    /*}
                                                    else
                                                    {*/
                                                    addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = itm.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
                                                    //}

                                                    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = itm.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });

                                                    var picture = EngineContext.Current.Resolve<IPictureService>().GetPicturesByProductId(itm.Id);
                                                    var pictureUrl = EngineContext.Current.Resolve<IPictureService>().GetPictureUrl(picture[0].Id);
                                                    //style = " display: inline-block; max-width: 24%;"
                                                    <div class="item-box">
                                                        <div class="product-item sevenspikes-ajaxcart" data-productid="@itm.Id">
                                                            <div class="picture">
                                                                <a href="@itm.SeName">
                                                                    <img class="picture-img" src="@pictureUrl" alt="Alternate Text" />
                                                                </a>
                                                                <div class="buttons desktop">
                                                                    <div class="quick-view-button"><a title="Quick View" style="margin-left: -40px;">Quick View</a></div>
                                                                    <div class="ajax-cart-button-wrapper" data-productid="@itm.Id" data-isproductpage="false">
                                                                        <button type="button"
                                                                                class="button-2 product-box-add-to-cart-button nopAjaxCartProductListAddToCartButton"
                                                                                data-productid="@itm.Id">
                                                                            <span style="margin-left: -43px;"> Add to cart</span>
                                                                        </button>
                                                                    </div>
                                                                    <button type="button" class="button-2 add-to-wishlist-button">
                                                                        <span style="margin-left: -32px;"> Wishlist </span>
                                                                    </button>

                                                                </div>
                                                            </div>
                                                            <div class="details">
                                                                <h2 class="product-title">
                                                                    <a href="@itm.SeName">@itm.Name </a>
                                                                    <span>@itm.Id</span>
                                                                </h2>
                                                                <div class="add-info">
                                                                    <div class="prices">
                                                                        @if (!String.IsNullOrEmpty(itm.ProductPrice.OldPrice))
                                                                        {
                                                                            <span class="price old-price">@itm.ProductPrice.OldPrice</span>
                                                                        }
                                                                        <span class="price actual-price">@itm.ProductPrice.Price</span>
                                                                    </div>
                                                                </div>
                                                                @*@Html.Widget("productbox_addinfo_middle", itm.Id)*@
                                                                <div class="buttons mobile">
                                                                    <div class="quick-view-button"><a title="Quick View" style="margin-left: -40px;">Quick View</a></div>
                                                                    <div class="ajax-cart-button-wrapper" data-productid="@itm.Id" data-isproductpage="false">
                                                                        <button type="button"
                                                                                class="button-2 product-box-add-to-cart-button nopAjaxCartProductListAddToCartButton"
                                                                                data-productid="@itm.Id">
                                                                            <span style="margin-left: -43px;"> Add to cart</span>
                                                                        </button>
                                                                    </div>
                                                                    <button type="button" class="button-2 add-to-wishlist-button">
                                                                        <span style="margin-left: -32px;"> Wishlist </span>
                                                                    </button>
                                                                </div>
                                                                @*<div class="buttons desktop">
                                            @if (!itm.DisableBuyButton)
                                            {
                                                var addToCartText = T("ShoppingCart.AddToCart").Text;
                                                if (itm.IsRental)
                                                {
                                                    addToCartText = T("ShoppingCart.Rent").Text;
                                                }
                                                if (itm.AvailableForPreOrder)
                                                {
                                                    addToCartText = T("ShoppingCart.PreOrder").Text;
                                                }
                                                <input type="button" value="@(addToCartText)" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />
                                            }
                                            @if (!itm.DisableWishlistButton)
                                            {
                                                <input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" />
                                            }
                                        </div>*@
                                                                @Html.Widget("productbox_addinfo_after", itm.Id)
                                                            </div>

                                                        </div>

                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                }
                            </div>
                </div>
            </div>
        </div>
    </div>
</div>
}
@*
    <div class="category-grid home-page-category-grid">
        <div class="item-grid">
            @foreach (var item in Model.Take(2))
            {
                <div class="item-box">
                    <div class="category-item">
                        <h2 class="title">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    @item.Name
                                </a>
                            </h2>

                        <div class="picture">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                </a>
                            </div>

                        <div class="item-box" style="width: 100%;">
                                @{
                                    List<int> CategoriesId1 = new List<int>();

                                    CategoriesId1.Add(item.Id);

                                    var Products1 = EngineContext.Current.Resolve<IProductService>().SearchProducts(categoryIds: CategoriesId1);

                                    foreach (var itm in Products1.Take(4))
                                    {
                                        var picture = EngineContext.Current.Resolve<IPictureService>().GetPicturesByProductId(itm.Id);
                                        var pictureUrl = EngineContext.Current.Resolve<IPictureService>().GetPictureUrl(picture[0].Id);

                                        <div style=" display: inline-block; max-width: 24%;">
                                            <img src="@pictureUrl" alt="Alternate Text" />
                                            <a href="@itm.GetSeName()">
                                                <h1>@itm.Name</h1>
                                            </a>
                                        </div>
                                    }
                                }
                            </div>
                    </div>
                </div>

                <div class="spc-wrapper">
                    <div class="spc spc-categories landscape">
                        <div class="spc-header">
                            <div class="picture">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                </a>
                            </div>
                        </div>
                        <div class="spc-body">
                            <div class="category-info">
                                <h2 class="category-title">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                        @item.Name
                                    </a>
                                </h2>
                            </div>
                            <div class="category-products">
                                <div class="product-grid active">
                                    <div class="item-grid">
                                        <div class="item-box">
                                            @{
                                                List<int> CategoriesId1 = new List<int>();

                                                CategoriesId1.Add(item.Id);

                                                var Products1 = EngineContext.Current.Resolve<IProductService>().SearchProducts(categoryIds: CategoriesId1);

                                                foreach (var itm in Products1.Take(4))
                                                {
                                                    var picture = EngineContext.Current.Resolve<IPictureService>().GetPicturesByProductId(itm.Id);
                                                    var pictureUrl = EngineContext.Current.Resolve<IPictureService>().GetPictureUrl(picture[0].Id);
                                                    //style = " display: inline-block; max-width: 24%;"
                                                    <div class="product-item sevenspikes-ajaxcart">
                                                        <div class="class=" picture"">
                                                            <a href="@itm.GetSeName()">
                                                                <img class="picture-img" src="@pictureUrl" alt="Alternate Text" />
                                                            </a>
                                                        </div>
                                                        <div class="details">
                                                            <h2 class="product-title">
                                                                <a href="@itm.GetSeName()"> @itm.Name</a>
                                                            </h2>
                                                            <div class="add-info">
                                                                <div class="prices">
                                                                    <span class="price actual-price">Rs. 14,700</span>
                                                                </div>
                                                            </div>

                                                        </div>

                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
    *@
}
