@model CatalogPagingFilteringModel
@using Nop.Web.Models.Catalog;

<div class="product-selectors">
    @*view mode*@
    @if (Model.AllowProductViewModeChanging)
    {
        <div class="product-viewmode">
            <span>@T("Catalog.ViewMode")</span>
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];

                <a class="viewmode-icon grid @if(gridMode.Selected){<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a>
                <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" href="@listMode.Value" title="@listMode.Text">@listMode.Text</a>
            }
        </div>
    }
    <div class="category-Page-Filter">
        @Html.Widget("left_side_column_before")
    </div>
    @*sorting*@
    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <div>
                <span>@T("Catalog.OrderBy")</span>
                @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
            </div>
            @*<div class="product-sorting-drop">
                <p class="PositionSort">
                    <span>Position</span>
                </p>
                <div class="product-sorting-drop-list">
                    @foreach (var item in Model.AvailableSortOptions.Skip(1))
                    {
                        <div>
                            <p onclick="setLocation(this.value)">
                                <span style="display:none;">@item.Value</span>
                                @item.Text
                            </p>
                        </div>
                    }
                </div>
            </div>*@
            <script>
                //$(document).ready(function () {
                //    $(".product-sorting-drop-list").hide();
                //    $(".PositionSort").click(function () {
                //        $(".product-sorting-drop-list").slideToggle();
                //    });
                //})
            </script>
        </div>
    }
    @*page size*@
    @*@if (Model.AllowCustomersToSelectPageSize)
    {
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { onchange = "setLocation(this.value);" })

            <span>@T("Catalog.PageSize.PerPage")</span>
        </div>
    }*@
</div>