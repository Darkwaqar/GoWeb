// Generated by CoffeeScript 1.7.1
(function () {
    jQuery(function ($) {
        function addBlacklistClass() {
            $('a').each(function () {
                if (this.href.indexOf('/admin') !== -1 ||
                    this.href.indexOf('/Edit') !== -1 ||
                    this.href.indexOf('/pdf') !== -1 ||
                    this.href.indexOf('/?add-to-cart') !== -1 ||
                    this.href.indexOf('?remove_item') !== -1) {
                    $(this).addClass('no-smoothState');
                }
            });

            //$('input[type="submit"]').each(function () {
            //    $(this).addClass('no-smoothState');
            //});
            $('form').each(function () {
                $(this).addClass('no-smoothState');
            });
        }
        var $body, mobile;
        $body = $("body");
        mobile = (typeof window.orientation) !== "undefined";
        (function () {
            addBlacklistClass();

            var $me;
            return $me = $("#main").smoothState({
                blacklist: '.no-smoothState',
                debug: true,
                onStart: {
                    duration: 1000,
                    render: function (url, $container) {
                        $body.trigger('out');
                        $("video:not(.no-stop)").each(function () {
                            return this.pause();
                        });
                        $("video.no-stop").animate({
                            volume: 0
                        }, 2000);
                        return $me.children().addClass('out');
                    }
                },
                onEnd: {
                    duration: 300,
                    render: function (url, $container, $content) {
                        $body.css('cursor', 'auto');
                        $body.find('a').css('cursor', 'auto');
                        $content.addClass('in');
                        $container.html('');
                        $body.scrollTop(0);
                        $content.appendTo($container);
                        $body.trigger('init');
                        setTimeout((function () {
                            return $me.children().removeClass('in');
                        }), 100);
                        return setTimeout((function () {
                            return $body.trigger('afterAnimation');
                        }), 1500);
                    }
                }
            });
        })();
        (function () {
            if (mobile) {
                return;
            }
            return $body.on('init', function () {
                $("script[type='text/template']").each(function () {
                    return $($(this).html()).insertAfter(this);
                });
                return $("video").each(function () {
                    return $(this).bind({
                        canplay: function () {
                            $(this).css({
                                visibility: 'visible'
                            });
                            if ($(this).hasClass('autoplay')) {
                                this.play();
                            }
                            if ($(this).hasClass('loop')) {
                                return this.loop = true;
                            }
                        }
                    });
                });
            });
        })();
        (function () {
            var scrollMagicController;
            if (mobile) {
                return;
            }
            scrollMagicController = null;
            return $body.on('init', function () {
                var height;
                if (scrollMagicController) {
                    scrollMagicController.destroy();
                }
                scrollMagicController = new ScrollMagic;
                height = $(window).height();
                $('main .down').each(function () {
                    var scene, tween;
                    tween = TweenMax.to(this, 0.5, {
                        bottom: "-30%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: height / 2,
                        duration: height
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.page-about main p').each(function () {
                    var scene, tween;
                    tween = TweenMax.to(this, 0.5, {
                        top: "110%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: height / 2,
                        duration: height * 2
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.page-about main header>span').each(function () {
                    var scene, tween;
                    tween = TweenMax.from(this, 0.5, {
                        top: "20vh"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent().parent()[0],
                        offset: 0,
                        duration: height * .75
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.intro header').each(function () {
                    var scene, tween;
                    tween = TweenMax.to(this, 0.5, {
                        top: "10%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: height / 2,
                        duration: height
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.intro .frame').each(function () {
                    var scene, tween;
                    tween = TweenMax.to(this, 0.5, {
                        top: "15%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: height / 2,
                        duration: height
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.outro .figure').each(function () {
                    var scene, tween;
                    tween = TweenMax.from(this, 0.5, {
                        top: "-10%",
                        backgroundPosition: "0% 100%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: -height / 2,
                        duration: height * 1.5
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });
                $('.outro .end-line').each(function () {
                    var scene, tween;
                    tween = TweenMax.from(this, 0.5, {
                        top: "10%",
                        backgroundPosition: "0% 100%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        duration: height / 2
                    });
                    return scene.setTween(tween).addTo(scrollMagicController);
                });

                /*
                $('.text').each ->
                  tween = TweenMax.fromTo @, 0.5, {top: "100%"}, top: "-30%"
                
                  scene = new ScrollScene
                    triggerElement: $(@).parent()[0]
                    offset: - height / 2
                    duration: height * 1.5
                
                  scene.setTween(tween).addTo(scrollMagicController)
                 */
                return $('.item .img').each(function () {
                    var scene, tween;
                    tween = TweenMax.from(this, 0.5, {
                        top: "100%"
                    });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: -height,
                        duration: height
                    });
                    scene.setTween(tween).addTo(scrollMagicController);
                    tween = TweenMax.fromTo(this, 0.5, {
                        backgroundPosition: "center 180%"
                    }, {
                            backgroundPosition: "center -80%"
                        });
                    scene = new ScrollScene({
                        triggerElement: $(this).parent()[0],
                        offset: -height / 2,
                        duration: height * 3
                    });
                    return scene = scene.setTween(tween).addTo(scrollMagicController);
                });
            });
        })();
        $(window).on("scroll", function () {
            return $body.trigger("scrolled");
        });
        (function () {
            if (mobile) {
                return;
            }
            return $body.on('init', function () {
                var $items, $loop, $markers, $video, fadeouted, lastShow, started;
                $loop = $("video.loop");
                $items = $(".item");
                $markers = $(".marker");
                $video = $("video.items-overlay");
                started = false;
                lastShow = false;
                fadeouted = false;
                $video.bind({
                    timeupdate: function () {
                        if (fadeouted) {
                            return;
                        }
                        if (this.currentTime > this.to) {
                            $markers.removeClass('currentHidden').removeClass('hidden');
                            fadeouted = true;
                            $loop[0].play();
                            return $video.fadeOut(1000, function () {
                                this.pause();
                                started = false;
                                return fadeouted = false;
                            });
                        }
                    }
                });
                $markers.click(function (e, scroll) {
                    var $marker, top;
                    if (scroll == null) {
                        scroll = true;
                    }
                    $marker = $(this);
                    if (!$video.length) {
                        return true;
                    }
                    if ($(window).width() > 800) {
                        $marker.addClass('currentHidden');
                        $markers.addClass('hidden');
                        $video.fadeIn(1000, function () {
                            return $loop[0].pause();
                        });
                        $video.each(function () {
                            this.currentTime = $marker.data('from');
                            this.to = $marker.data('to') - 1;
                            return this.play();
                        });
                    }
                    started = true;
                    lastShow = $marker.prevAll().length;
                    if (scroll) {
                        top = $items.eq(lastShow).offset().top;
                        $("body").animate({
                            scrollTop: top
                        }, 1000);
                    }
                    return false;
                });
                return $body.on("scrolled", function () {
                    var i, item, show, top, _i, _len;
                    if (started) {
                        return;
                    }
                    top = $body.scrollTop();
                    show = false;
                    for (i = _i = 0, _len = $items.length; _i < _len; i = ++_i) {
                        item = $items[i];
                        if (item.offsetTop < top) {
                            show = i;
                        }
                    }
                    if (lastShow === show) {
                        return;
                    }
                    lastShow = show;
                    if (show === false) {
                        return;
                    }
                    return $markers.eq(show).trigger('click', [false]);
                });
            });
        })();
        (function () {
            return $body.on('init', function () {
                if (!mobile) {
                    return;
                }
                $(".play-test").hide();
                return $(".play-mobile-video").show().click(function (e) {
                    var lang, source, video;
                    lang = 'en';
                    video = document.createElement('video');
                    source = document.createElement('source');
                    $(source).attr({
                        type: 'video/mp4',
                        src: "/Themes/Grandeur/Content/videos/intro-mobile-en.mp4"
                    });
                    $(video).css({
                        position: 'absolute',
                        left: 0,
                        top: 0,
                        width: '100%',
                        height: '100%',
                        zIndex: 200
                    }).append(source).appendTo("body");
                    video.addEventListener('endfullscreen', function (e) {
                        return $(video).remove();
                    });
                    video.addEventListener('webkitendfullscreen', function (e) {
                        return $(video).remove();
                    });
                    video.addEventListener('ended', function (e) {
                        return $(video).remove();
                    });
                    video.addEventListener('fullscreenchange', function (e) {
                        if (document.webkitCurrentFullScreenElement) {
                            return;
                        }
                        return $(video).remove();
                    });
                    video.addEventListener('webkitfullscreenchange', function (e) {
                        if (document.webkitCurrentFullScreenElement) {
                            return;
                        }
                        return $(video).remove();
                    });
                    video.play();
                    if (typeof video.requestFullscreen === "function") {
                        video.requestFullscreen();
                    }
                    if (typeof video.webkitRequestFullscreen === "function") {
                        video.webkitRequestFullscreen();
                    }
                    if (!(video.webkitRequestFullscreen || video.requestFullscreen)) {
                        setTimeout(function () {
                            if (typeof video.webkitEnterFullScreen === "function") {
                                video.webkitEnterFullScreen();
                            }
                            if (typeof video.enterFullScreen === "function") {
                                video.enterFullScreen();
                            }
                            return true;
                        });
                    }
                    e.stopPropagation();
                    return false;
                });
            });
        })();
        (function () {
            return $body.on('init', function () {
                var $videos;
                $videos = $(".videos > div > div");
                return $(".play-zones>div").each(function () {
                    var $video;
                    $video = $videos.filter("." + this.className);
                    return this.video = $video.children('video');
                }).bind({
                    mouseenter: function () {
                        return this.video.each(function () {
                            this.play();
                            return this.loop = true;
                        });
                    },
                    mouseleave: function () {
                        return this.video.each(function () {
                            this.loop = false;
                            return true;
                        });
                    }
                });
            });
        })();
        (function () {
            var findResult, showAnswers;
            findResult = function (answers) {
                var c, count, id, results;
                count = 0;
                for (id in answers) {
                    c = answers[id];
                    if (c > count) {
                        count = c;
                    }
                }
                results = [];
                for (id in answers) {
                    c = answers[id];
                    if (c === count) {
                        results.push(id);
                    }
                }
                return results[Math.floor(Math.random() * results.length)];
            };
            showAnswers = function ($section) {
                var i;
                i = 0;
                return $section.find(".answers").show().children('a').addClass('hidden').each(function () {
                    return setTimeout(((function (_this) {
                        return function () {
                            return $(_this).removeClass('hidden');
                        };
                    })(this)), ++i * 200);
                });
            };
            $body.on('afterAnimation', function () {
                var $firstSection;
                $firstSection = $("section.active").removeClass('from-hidden');
                return setTimeout((function () {
                    return showAnswers($firstSection);
                }), 640);
            });
            return $body.on('init', function () {
                var answers;
                answers = {};
                return $(".answers a").click(function () {
                    var $aside, $next, $section, answer, step;
                    $(this).addClass('currentHidden').siblings().addClass('hidden');
                    answer = $(this).data("id");
                    if (!answers[answer]) {
                        answers[answer] = 0;
                    }
                    answers[answer]++;
                    $section = $(this).parents("section");
                    $section.addClass('hidden');
                    $next = $section.next('section');
                    if (!$next.length) {
                        $(this).attr('href', "/bg-" + findResult(answers));
                        return;
                    }
                    $next.addClass('active').addClass('from-hidden');
                    $next.css({
                        position: 'absolute',
                        left: 0,
                        top: 0,
                        right: 0
                    });
                    $next.find(".answers").hide();
                    step = $next.prevAll("section").length;
                    $aside = $("aside>div").eq(step).removeClass('hidden');
                    setTimeout(function () {
                        return $aside.prevAll().hide();
                    }, 4000);
                    setTimeout((function () {
                        return $next.removeClass('from-hidden');
                    }), 40);
                    setTimeout((function () {
                        $section.removeClass('active');
                        $next.css({
                            position: ''
                        });
                        return showAnswers($next);
                    }), 640);
                    return false;
                });
            });
        })();
        (function () {
            return $body.on('init', function () {
                var i;
                i = 0;
                return $(".marker").show().addClass('hidden').each(function () {
                    return setTimeout(((function (_this) {
                        return function () {
                            return $(_this).removeClass('hidden');
                        };
                    })(this)), 1500 + ++i * 200);
                });
            });
        })();
        $("#main>.in").removeClass("in");
        (function () {
            return $body.on('init', function () {
                if (mobile) {
                    $("footer .intro-video").hide();
                }
                return $(".page-intro").each(function () {
                    var $skip, hide, skiped, tId;
                    $skip = $(".skip");
                    if (mobile) {
                        $("#main").data('smooth-state').load($skip.attr('href'));
                    }
                    tId = null;
                    hide = function () {
                        if (tId) {
                            clearTimeout(tId);
                        }
                        $skip.removeClass('hidden');
                        return tId = setTimeout((function () {
                            return $skip.addClass('hidden');
                        }), 1000);
                    };
                    $body.mousemove(hide);
                    hide();
                    skiped = false;
                    $(this).children('video').each(function () {
                        return this.addEventListener('timeupdate', function () {
                            if (skiped) {
                                return;
                            }
                            if (this.currentTime < this.duration - 3) {
                                return;
                            }
                            return $skip.trigger('click');
                        });
                    });
                    return $skip.on('click', function () {
                        $.cookie("intro-showed", "1", "/");
                        return skiped = true;
                    });
                });
            });
        })();
        (function () {
            var bgSound, goMute, goUnmute, mute, sound, volume;
            if (mobile) {
                return;
            }
            sound = new Audio("/Themes/Grandeur/Content/sounds/tock.mp3");
            mute = !!$.cookie("muted");
            volume = .35;
            bgSound = new Audio("/Themes/Grandeur/Content/sounds/bg.mp3");
            bgSound.volume = 0;
            bgSound.loop = true;
            goMute = function () {
                if (bgSound.paused) {
                    return;
                }
                $(bgSound).stop().animate({
                    volume: 0
                }, 1000, (function () {
                    return bgSound.pause();
                }));
                return true;
            };
            goUnmute = function () {
                if (mute) {
                    return;
                }
                if (!bgSound.paused) {
                    return;
                }
                $(bgSound).stop().animate({
                    volume: volume
                }, 1000);
                bgSound.play();
                return true;
            };
            return $body.on('init', function () {
                $body.find("a").click(function () {
                    if (!mute) {
                        sound.play();
                    }
                    return true;
                });
                if ($(".page-intro").length) {
                    if (mute) {
                        $("video")[0].muted = true;
                    }
                    goMute();
                } else {
                    goUnmute();
                }
                if (mute) {
                    $(".mute").hide();
                    $(".unmute").show();
                }
                $(".mute").click(function () {
                    $(".unmute").show();
                    $(this).hide();
                    mute = true;
                    $.cookie("muted", "1", "/");
                    goMute();
                    return false;
                });
                return $(".unmute").click(function () {
                    $(".mute").show();
                    $(this).hide();
                    mute = false;
                    $.cookie("muted", "", "/");
                    goUnmute();
                    return false;
                });
            });
        })();
        (function () {
            return $body.on('init', function () {
                $(".share .show-share").click(function () {
                    $(this).addClass("hidden").siblings().removeClass("hidden");
                    return false;
                });
                $(".share .btn-fb").click(function () {
                    window.social.share.Facebook({
                        share: $(this).parent().data()
                    });
                    return false;
                });
                return $(".share .btn-vk").click(function () {
                    window.social.share.Vkontakte({
                        share: $(this).parent().data()
                    });
                    return false;
                });
            });
        })();
        (function () {
            return $body.on('init', function () {
                $(".hamburger").click(function () {
                    $(this).toggleClass('active');
                    $("#main").toggleClass('show-menu');
                    return false;
                });
                $(".overlay").click(function () {
                    $(".hamburger").removeClass('active');
                    return $("#main").removeClass('show-menu');
                });
                return $(".mobile-menu a").click(function () {
                    if ($(this).hasClass('active')) {
                        return false;
                    }
                    return $(this).addClass('active').siblings('.active').removeClass('active');
                });
            });
            return $body.on('out', function () {
                $(".hamburger").removeClass('active');
                return $("#main").removeClass('show-menu');
            });
        })();
        $body.trigger('init');
        return $body.trigger('afterAnimation');
    });

}).call(this);
