@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@using Nop.Services.Catalog;


@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
    var productQuantity = EngineContext.Current.Resolve<IProductService>().GetProductById(Model.Id).StockQuantity;
    string theme = EngineContext.Current.Resolve<Nop.Core.Domain.StoreInformationSettings>().DefaultStoreTheme;

    if (String.IsNullOrWhiteSpace(theme))
    {
        theme = "BootstrapDC";
    }
    string imgpath = "/themes/" + theme + "/content/images";
    bool isOutOfStock = (productQuantity < 1);
}

<div class="col-md-12 slide-box">
    @if (isOutOfStock)
    {
        <div class="soldout">
            <img src="@imgpath/soldout.png" class="img-responsive" />
        </div>
    }
<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">
        <img style="width:100% ; border-bottom: 0;" alt="@Model.DefaultPictureModel.Title" src="@Model.DefaultPictureModel.ImageUrl">
    </a>

    <div class="mos-panel Produc-mos-panel animate">
        <a class="mos-inner" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">
            @* <i style="padding-top:20px;" class="fa fa-chevron-right pull-right mobile-obj"></i>*@
            <h2 class="mob-tit tit-slide-box">@Model.Name</h2>
            @*<div class="sep-line"></div>*@
            <p style="width:100%;height:22px;overflow:hidden; margin:0px;">
                @Model.ShortDescription
            </p>

            <p>@Model.ProductPrice.Price</p>
            <button class="btn btn-white-trasp">discover</button>
        </a>
    </div>
@*
    <img class="img-responsive" style=" width: 100%;" alt="@Model.DefaultPictureModel.Title" src="@Model.DefaultPictureModel.ImageUrl">
    <div class="mos-panel animate">
        <a class="mos-inner" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">
            <i style="padding-top:20px;" class="fa fa-chevron-right pull-right mobile-obj"></i>
            <h2 class="mob-tit tit-slide-box">@Model.Name</h2>
            <div class="sep-line"></div>
            <p style="width:  100%;height: 63px;overflow:  hidden;">
                @Model.ShortDescription
            </p>
            <button class="btn btn-white-trasp">discover</button>
        </a>
    </div>*@
</div>

    @*<div class="thumbnail" id="box@(Model.Id)">


        <div class="rollover" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')">

            <div class="title-container">
                <div class="title">
                    @Model.ShortDescription
                    <br />
                    <br />
                    <br />
                    <br />
                    <h5>View Details  >></h5>
                </div>
            </div>
            <a class="content" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" style="padding:2px 20px">
            </a>
        </div>
             <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                <div class="add-cart" style="position: absolute; margin-top: 123px; margin-left: 28px;">
                </div>
                 <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" id="pimage@(Model.Id)" title="@Model.DefaultPictureModel.Title" class="img-responsive check" />
            </a>
            <div class="caption text-left" >
                <div  >
                    <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" id="pname@(Model.Id)" class="name"  >@Model.Name</a>
                </div>
                @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                {
                    int ratingPercent = 0;
                    int fStar = 0;
                    if (Model.ReviewOverviewModel.TotalReviews != 0)
                    {
                        ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                    }
                    fStar = ratingPercent / 20;
                }
                <div class="description hidden-md hidden-sm hidden-xs hidden-lg" id="ShortDes@(Model.Id)">
                    @Html.Raw(Model.ShortDescription)
                </div>
                @Html.Widget("productbox_addinfo_middle", Model.Id)
                <div class="price" id="pprice@(Model.Id)">
                    @Html.Widget("productbox_addinfo_before", Model.Id)

                    @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <div>
                            <del class="text-muted"><span id="pOldPrice@(Model.Id)">@Model.ProductPrice.OldPrice</span></del>
                        </div>
                    }
                    @Model.ProductPrice.Price
                    @if (Model.ProductPrice.DisplayTaxShippingInfo)
                    {
                        var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                        //of course, you can modify appropriate locales to include VAT info there
                        <span class="tax-shipping-info">
                            @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </span>
                    }
                </div>
                @Html.Widget("productbox_addinfo_after", Model.Id)
                <div class="btn-group" role="group">
                </div>
            </div>
        </div>*@