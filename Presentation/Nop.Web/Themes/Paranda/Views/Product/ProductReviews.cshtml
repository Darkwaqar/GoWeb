@model ProductReviewsModel
@using Nop.Web.Models.Catalog;
@{
   // Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductReviews").Text);
}

@*<div class="page-header page-header-custom">
    <h3 class="text-center">@T("Reviews.ProductReviewsFor") <a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">@Model.ProductName</a></h3>
</div>*@
<div class="page-body">

    @*@Html.Widget("productreviews_page_top", Model.ProductId)
    @if (Model.AddProductReview.SuccessfullyAdded)
    {
        <div class="text-success text-center">
            @Model.AddProductReview.Result
        </div>
    }
    else
    {
        <div class="row" id="review-form">
            <div class="col-sm-offset-2 col-sm-8">
                <div class="text-center">
                    <h3>@T("Reviews.Write")</h3>
                </div>
                @using (Html.BeginForm())
                {
                    var validationSummary = Html.ValidationSummary(true);
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="text-danger">@validationSummary</div>
                    }
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddProductReview.Title, new { @class = "col-sm-2 control-label" }, ":")
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.AddProductReview.Title, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "form-control" }) : (object)(new { @class = "form-control", disabled = "disabled" }))
                                @Html.ValidationMessageFor(model => model.AddProductReview.Title)
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddProductReview.ReviewText, new { @class = "col-sm-2 control-label" }, ":")
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.AddProductReview.ReviewText, Model.AddProductReview.CanCurrentCustomerLeaveReview ? (object)(new { @class = "form-control", rows = "10",style="padding-bottom:200px" }) : (object)(new { @class = "form-control", rows = "10", disabled = "disabled" }))
                                @Html.ValidationMessageFor(model => model.AddProductReview.ReviewText)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddProductReview.Rating, new { @class = "col-sm-2 control-label" }, ":")
                            <div class="col-sm-10">
                                <ul class="list-inline">
                                    <li class="rating-options">
                                        <label class="checkbox-inline text-danger">
                                            @T("Reviews.Fields.Rating.Bad")
                                        </label>
                                        <label class="checkbox-inline">
                                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "1", new { id = "addproductrating_1" })
                                        </label>
                                        <label class="checkbox-inline">
                                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "2", new { id = "addproductrating_2" })
                                        </label>
                                        <label class="checkbox-inline">
                                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "3", new { id = "addproductrating_3" })
                                        </label>
                                        <label class="checkbox-inline">
                                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "4", new { id = "addproductrating_4" })
                                        </label>
                                        <label class="checkbox-inline">
                                            @Html.RadioButtonFor(model => model.AddProductReview.Rating, "5", new { id = "addproductrating_5" })
                                        </label>
                                        <label class="checkbox-inline text-success">
                                            @T("Reviews.Fields.Rating.Excellent")
                                        </label>
                                    </li>
                                </ul>
                            </div>

                        </div>
                        @if (Model.AddProductReview.DisplayCaptcha)
                    {
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <div class="col-sm-12 text-center">
                                <input type="submit" name="add-review" class="btn btn-primary" value="@T("Reviews.SubmitButton")" />
                            </div>

                            </div>
                        </div>

                    }
                </div>

            </div>
        }*@
    @if (Model.Items.Count > 0)
    {
        <div class="product-review-list">
            
            @foreach (var review in Model.Items)
            {
                int ratingPercent = review.Rating * 20;
                    <div class="title">
                        <strong style="color:rgb(47,63,88)">@review.Title</strong>
                        <br />
                  
                        <div style="margin-top:6px;margin-bottom:6px">
                            <span>
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (review.Rating > i)
                                    {       <i class="" style=""><img style="margin-right:7px" src="/themes/bootstrapdc/content/images/blue/@i-box.png" /></i>
                                    }
                                    else
                                    {       <i class="" style=""><img src="/themes/bootstrapdc/content/images/white/@i-box.png" /></i>
                                    }
                                }
                                @*@for (int i = 0; i < (5 - review.Rating); i++)
                {
                    <i class=""><img src="/themes/bootstrapdc/content/images/white/@i-box.png" /></i>
                }*@
                            </span>
                        </div>
                       
                    </div>
                    <div class="">
                        <div class="padding10" style="margin-bottom:14px">
                            @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                        </div>
                        @*<div class="comment_sender">
                            <span >
                                <label>@T("Reviews.From"):</label>
                                @if (review.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                }
                                else
                                {
                                    @review.CustomerName
                                }
                            </span>
                            <span class="separator">|</span>
                            <span class="date">
                                     <label>@T("Reviews.Date"):</label>
                                <span>@review.WrittenOnStr</span>
                            </span>
                            <div>
                                @Html.Partial("_ProductReviewHelpfulness", review.Helpfulness, new ViewDataDictionary())
                            </div>
                        </div>*@
                       
                        @Html.Widget("productreviews_page_inside_review", review.Id)
                    </div>
            }
        </div>
    }
    @Html.Widget("productreviews_page_bottom", Model.ProductId)
</div>

