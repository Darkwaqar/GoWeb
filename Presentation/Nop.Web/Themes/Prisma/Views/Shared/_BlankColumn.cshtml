@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration
@using Nop.Services.Vendors

@{
    Layout = "~/Views/Shared/_Root.Head.cshtml";

    //current category ID
    int currentCategoryId = 0;

    //current vendor ID
    int vendorId = 0;
    string controllerName = Url.RequestContext.RouteData.Values["controller"].ToString();
    string actionName = Url.RequestContext.RouteData.Values["action"].ToString();

    if (controllerName.Equals("catalog", StringComparison.InvariantCultureIgnoreCase) && actionName.Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }

    if (controllerName.Equals("catalog", StringComparison.InvariantCultureIgnoreCase) && actionName.Equals("Vendor", StringComparison.InvariantCultureIgnoreCase))
    {
        vendorId = Convert.ToInt32(Url.RequestContext.RouteData.Values["vendorId"].ToString());
        currentCategoryId = EngineContext.Current.Resolve<IVendorService>
    ().GetVendorById(vendorId).MapedCatagory;
    }

    //current manufacturer ID
    int currentManufacturerId = 0;
    if (controllerName.Equals("catalog", StringComparison.InvariantCultureIgnoreCase) && actionName.Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
    }

    //current product ID
    int currentProductId = 0;
    if (controllerName.Equals("product", StringComparison.InvariantCultureIgnoreCase) && actionName.Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }

    var storeId = EngineContext.Current.Resolve<IStoreContext>
        ().CurrentStore.Id;
    string gridNuberOfItemsClass = EngineContext.Current.Resolve<ISettingService>
        ().GetSettingByKey("prismathemesettings.categorygriditemsnumber", "three-per-row", storeId, true);

    var isAccountPage = (controllerName.Equals("customer", StringComparison.InvariantCultureIgnoreCase) && (
    actionName.Equals("info", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("addresses", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("addressadd", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("addressedit", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("downloadableproducts", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("changepassword", StringComparison.InvariantCultureIgnoreCase) ||
    actionName.Equals("avatar", StringComparison.InvariantCultureIgnoreCase))) ||
    actionName.Equals("customerproductreviews", StringComparison.InvariantCultureIgnoreCase) ||
    controllerName.Equals("helpdesk", StringComparison.InvariantCultureIgnoreCase) ||
    controllerName.Equals("vendor", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("info", StringComparison.InvariantCultureIgnoreCase) ||
    (controllerName.Equals("backinstocksubscription", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("customersubscriptions", StringComparison.InvariantCultureIgnoreCase)) ||
    (controllerName.Equals("order", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("customerorders", StringComparison.InvariantCultureIgnoreCase)) ||
    (controllerName.Equals("order", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("customerrewardpoints", StringComparison.InvariantCultureIgnoreCase)) ||
    (controllerName.Equals("boards", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("customerforumsubscriptions", StringComparison.InvariantCultureIgnoreCase)) ||
    (controllerName.Equals("returnrequest", StringComparison.InvariantCultureIgnoreCase) &&
    actionName.Equals("customerreturnrequests", StringComparison.InvariantCultureIgnoreCase));
            }

     
                @*@Html.Widget("main_column_before")*@
                @RenderBody()
                @*@Html.Widget("main_column_after")*@
               