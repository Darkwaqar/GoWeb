@model CatalogPagingFilteringModel
@using Nop.Web.Models.Catalog;

<div class="product-selectors">
    @*view mode*@
    @if (Model.AllowProductViewModeChanging)
    {
        <div class="product-viewmode">
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];

                <a class="viewmode-icon grid @if(gridMode.Selected){<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a>
                <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" href="@listMode.Value" title="@listMode.Text">@listMode.Text</a>
            }
        </div>
    }
    @*sorting*@
    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <span>@T("Catalog.OrderBy")</span>
            @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
        </div>
    }
    @*page size*@
    @if (Model.AllowCustomersToSelectPageSize)
    {
        var perPageText = T("Catalog.PageSize.PerPage");
        
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            <select id="products-pagesize" onchange="setLocation(this.value);">
                @foreach (var option in Model.PageSizeOptions)
                {
                    <option value="@option.Value" @if (option.Selected){<text>selected="selected"</text>}>@option.Text @perPageText</option>
                }
            </select>
        </div>
    }
</div>