@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using growonline.Core.Domain.Common;
@using growonline.Core.Domain.Seo;
@using growonline.Core.Infrastructure;
@using growonline.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @*@if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="container-full no-margin nopadding">
            <ol class="breadcrumb listing-breadcrumb">
                <li>
                    <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                </li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                        {
                            <strong class="current-item">@cat.Name</strong>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                        }
                    </li>
                }
            </ol>
            @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
        </div>
   }*@
}
@*<div class="page-header page-header-custom">
    <h3 class="text-center">@Model.Name</h3>
	
</div>*@
<div class="page-body " style="margin-left:-40px; margin-right:-40px">
    @Html.Widget("categorydetails_top", Model.Id)
    @*description*@
    @if (!String.IsNullOrWhiteSpace(Model.Description))
    {
         
        <div class="page-description" style="display:none" id="catimg" >
            @Html.Raw(Model.Description)
        </div>
    <div class="page-description">
        <div class="row no-margin">
            <div class="col-sm-12 custompadding">
                <img src="" id="categoryimg" style="width:100%" />
            </div>
        </div>

    </div>
        <script>
    $("#categoryimg").attr("src", $("#catimg ").find("img").attr("src")).addClass("img-responsive")   ;
        </script>
    }else
    { 
            <div class="text-center" style="text-transform:uppercase"><h3>@Model.Name</h3></div>
        <hr />
    }
    @Html.Widget("categorydetails_before_subcategories", Model.Id)
    @*subcategories*@

    @if (Model.SubCategories.Count > 0)
    {
        <div class="row text-center no-margin container-fluid">
            @foreach (var item in Model.SubCategories)
                {
                <div class="col-xs-6 col-sm-6 col-md-4 custompadding">
                    <div class="hovereffect">
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" class="img-responsive" width="100%" style="max-height:600px" />
                        </a>
                        <div class="overlay">
                            <a class="info" href="@Url.RouteUrl("Category", new { SeName = item.SeName })">
                                <h3>@item.Name</h3>

                            </a>
                        </div>
                    </div>
                  
                       
                    
                   
                    @*<div class="thumbnail">
                       
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" class="img-responsive" />
                        </a>
                        <div class="caption">
                            <h4>
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    @item.Name
                                </a>
                            </h4>
                        </div>
                    </div>*@
                </div>
            }
        </div>
    }
    @Html.Widget("categorydetails_before_featured_products", Model.Id)
    @*featured products*@
    @if (Model.FeaturedProducts.Count > 0)
    {
        <div class="row">
            <div class="col-md-12 text-center">
                <h2>@T("Products.FeaturedProducts")</h2>
            </div>
        </div>
        <div class="row text-center">
            @foreach (var item in Model.FeaturedProducts)
                {
                <div class="col-xs-12 col-sm-6 col-md-3">
                    @Html.Partial("_ProductBox", item)
                </div>
            }
        </div>
    }
    <div class="row no-margin " >
     
       
        @*@if (Model.Products.Count > 0)
{

    <div class="row no-margin filter-bar1">


        <div class="col-md-6  nopadding">
            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {

                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())

            }
        </div>
        <div class="col-md-6 text-left nopadding">
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())

        </div>
    </div>

}*@







        @*@if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
{
    <div class="col-md-3 nopadding filter-bar">
        @T("Filtering.SpecificationFilter")
    </div>
}*@
    </div>
    <div class="row no-margin "  >
      

@if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
{
    <div class="col-md-12 ">
        @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
    </div>
}
     

    </div>
<div class="row no-margin">
        @Html.Widget("categorydetails_after_featured_products", Model.Id)





        @Html.Widget("categorydetails_before_product_list", Model.Id)
</div>

    @if (Model.Products.Count > 0)
    {
        <div class="row container-fluid">
            @foreach (var product in Model.Products)
{
    if (Model.PagingFilteringContext.ViewMode == "list")
    {
        <div class="col-xs-12 col-xs-12 nopadding">
            @Html.Partial("_ProductBoxList", product)
        </div>
    }
    else
    {
        <div class="col-xs-12 col-sm-12 col-md-3 ">
            @Html.Partial("_ProductBox", product)
        </div>
    }
}
        </div>
    }
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
    @Html.Widget("categorydetails_bottom", Model.Id)
</div>

<script>


    $(".filter-bar").on("click", function () {

      
        $(".filter-panel").slideToggle("normal", function () {
            var isVisible = $(this).is(":visible");
            if (isVisible)
            {
                    $("#filterArrow").removeClass("fa-angle-down");
                    $("#filterArrow").addClass("fa-angle-up");
                    return;
            }
            $("#filterArrow").removeClass("fa-angle-up");
            $("#filterArrow").addClass("fa-angle-down");

            // Animation complete.
        });

        //if ($('.filter-panel').css('display') == 'none') {
        //    $(".filter-panel").show("normal");
        //    $("#filterArrow").removeClass("fa-angle-down");
        //    $("#filterArrow").addClass("fa-angle-up");
        //    setTimeout(fu)
        //    $("#btnfilterClose").fadeIn("slow");
        //    return;
        //}
        //$(".filter-panel").hide("normal");
        //$("#filterArrow").removeClass("fa-angle-up");
        //$("#filterArrow").addClass("fa-angle-down");
        //$("#btnfilterClose").fadeOut("slow");
        
    });
</script>