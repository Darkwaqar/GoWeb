@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}
<div class="container-full">

    <div class="big-header">
        <div class="container">
            <h3><span class="fa fa-key">&nbsp;&nbsp;</span>My Account / <span class="text-gray">Regiser Now</span></h3>
            <small class="text-gray">Register now and make the most of My Account.</small>
        </div>

    </div>

    <div class="container">


        @using (Html.BeginForm())
    {
            @Html.AntiForgeryToken()
            <div class="raw register-body no-margin">
                <div class="col-sm-offset-3 col-sm-6">
                    @{
        var validationSummary = Html.ValidationSummary(true);
                    }
                    @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                        <div class="text-danger text-center">@validationSummary</div>
            }
                    @Html.Partial("_ExternalAuthentication.AssociateMessage")
                    <div class="subheading">
                        @T("Account.YourPersonalDetails")
                    </div>
                    <div class="form-horizontal">
                        @if (Model.GenderEnabled)
                {
                            
                            
               
                                @*<label class="col-sm-3 control-label">@T("Account.Fields.Gender"):</label>*@
                                <div class="col-sm-12 nopadding" style="text-align:center">
                                    <div class="R1">
                            <label class="radio-inline">
                                        @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                                <label for="gender-male"><span></span></label>
                                        @T("Account.Fields.Gender.Male")
                                    </label></div>
                                    <div class="R2">
                                        <label class="radio-inline">
                                            @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                                            <label for="gender-female"><span></span></label>
                                            @T("Account.Fields.Gender.Female")
                                        </label>
                                    </div>
                                    </div>
                           
                }
                        
                            @*@Html.LabelFor(m => m.FirstName, new { @class = "col-sm-3 control-label"}, ":")*@
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">




                                        <div class="col-sm-12 nopadding">
                                            @*<div class="hedi"><p>FIRST NAME:</p></div>*@
                                            @Html.TextBoxFor(m => m.FirstName, new { @class = "textbox", @placeholder = "FIRST NAME" })@*&nbsp;@Html.RequiredHint()*@
                                            <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.FirstName)</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">

                                        @*@Html.LabelFor(m => m.LastName, new { @class = "col-sm-3 control-label" }, ":")*@
                                        <div class="col-sm-12 nopadding">
                                            @*<div class="hedi"><p>LAST NAME:</p></div>*@
                                            @Html.TextBoxFor(m => m.LastName, new { @class = "textbox", @placeholder = "LAST NAME" }) @*&nbsp; @Html.RequiredHint()*@
                                            <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.LastName)</small>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                            @if (Model.DateOfBirthEnabled)
                {
                                <div class="form-group">
                                    @*<label class="col-sm-3 control-label"></label>*@
                                   
                                    <div class="col-sm-12 info-date-picker select">
                                        @*<div class="hedi"><p>DATE OF BIRTH:</p></div>*@
                                @Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
                                Html.FieldNameFor(x => x.DateOfBirthMonth),
                                Html.FieldNameFor(x => x.DateOfBirthYear),
                                DateTime.Now.Year - 56,
                                DateTime.Now.Year,
                                Model.DateOfBirthDay,
                                Model.DateOfBirthMonth,
                                Model.DateOfBirthYear)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthDay)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthMonth)
                                    @Html.ValidationMessageFor(model => model.DateOfBirthYear)
                                </div>

                                @if (Model.DateOfBirthRequired)
                    {
                                    <div class="col-sm-1">
                                        @Html.RequiredHint()
                                    </div>
                        }
                            </div>
                }
                            <div class="form-group">
                                @*     @Html.LabelFor(m => m.Email, new { @class = "col-sm-3 control-label" }, ":")*@
                                <div class="col-sm-12">
                                    @*<div class="hedi"><p>EMAIL:</p></div>*@
                                    @Html.TextBoxFor(m => m.Email, new { @class = "textbox",@placeholder="EMAIL" })@*&nbsp;@Html.RequiredHint()*@
                                    <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Email)</small>
                                </div>

                        </div>
                        @if (Model.UsernamesEnabled)
                {
                                <div class="form-group">
                                    @*@Html.LabelFor(m => m.Username, new { @class = "col-sm-3 control-label" }, ":")*@
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.Username, new { @class = "textbox", @placeholder = "User Name" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Username)</small>
                                    </div>
                                    @*<div class="col-sm-1">
                                        @Html.RequiredHint()
                                    </div>*@
                                </div>
                                <div class="form-group">
                                    @if (Model.CheckUsernameAvailabilityEnabled)
                    {
                                    <div class="col-sm-offset-2 col-sm-8 text-center">
                                        @Html.Partial("_CheckUsernameAvailability")
                                    </div>
                        }
                            </div>
                }
                    </div>
                    @if (Model.CompanyEnabled || Model.DisplayVatNumber)
{
                        <div class="subheading">
                            @T("Account.CompanyDetails")
                        </div>
                        <div class="form-horizontal">
                            @if (Model.CompanyEnabled)
                    {
                                <div class="form-group">
                                    @*@Html.LabelFor(m => m.Company, new { @class = "col-sm-3 control-label" }, ":")*@
                                    <div class="col-sm-12">
                                        @*<div class="hedi"><p>COMPANY NAME:</p></div>*@
                                        @Html.TextBoxFor(m => m.Company, new { @class = "textbox",@placeholder="COMPANY NAME" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Company)</small>
                                    </div>
                                    @if (Model.CompanyRequired)
                        {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.DisplayVatNumber)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.VatNumber, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.VatNumber, new { @class = "textbox", @placeholder = "Number" })
                                        <small><i>@T("Account.Fields.VatNumber.Note")</i></small>
                                    </div>
                                </div>
                    }
                        </div>
            }
                    @if (Model.StreetAddressEnabled || Model.StreetAddress2Enabled || Model.ZipPostalCodeEnabled
                                                                        || Model.CityEnabled || Model.CountryEnabled)
            {
                        @*<div class="subheading">
                            @T("Account.YourAddress")
                        </div>*@
                        <div class="form-horizontal">
                            @if (Model.StreetAddressEnabled)
                    {
                                <div class="form-group">
                                    @*@Html.LabelFor(m => m.StreetAddress, new { @class = "col-sm-3 control-label" }, ":")*@
                                    <div class="col-sm-12">
                                        @Html.TextBoxFor(m => m.StreetAddress, new { @class = "textbox", @placeholder = "Address" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.StreetAddress)</small>
                                    </div>
                                    @if (Model.StreetAddressRequired)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.StreetAddress2Enabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.StreetAddress2, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.StreetAddress2, new { @class = "textbox", @placeholder = "Address 2" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.StreetAddress2)</small>
                                    </div>
                                    @if (Model.StreetAddress2Required)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.ZipPostalCodeEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ZipPostalCode, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.ZipPostalCode, new { @class = "textbox", @placeholder = "Zip Postal Code" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.ZipPostalCode)</small>
                                    </div>
                                    @if (Model.ZipPostalCodeRequired)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.CityEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.City, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.City, new { @class = "textbox", @placeholder = "City" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.City)</small>
                                    </div>
                                    @if (Model.CityRequired)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.CountryEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CountryId, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.DropDownList("CountryId", Model.AvailableCountries, new { @class = "textbox" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.CountryId)</small>
                                    </div>
                                    @if (Model.CountryRequired)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                            @if (Model.CountryEnabled && Model.StateProvinceEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StateProvinceId, new { @class = "col-sm-4 control-label" }, ":")
                                    <div class="col-sm-4">
                                        @Html.DropDownList("StateProvinceId", Model.AvailableStates, new { @class = "textbox" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.StateProvinceId)</small>
                                        <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                    </div>
                                    @if (Model.StateProvinceRequired)
                            {
                                        @*<div class="col-sm-1">
                                            @Html.RequiredHint()
                                        </div>*@
                            }
                                </div>
                    }
                        </div>
            }
                    @if (Model.PhoneEnabled || Model.FaxEnabled)
            {
                        <div class="subheading">
                            @T("Account.YourContactInformation")
                        </div>
                        <div class="form-horizontal">
                            @if (Model.PhoneEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Phone, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.Phone, new { @class = "textbox", @placeholder = "Phone" })@if (Model.PhoneRequired)
{
                                            @*<span>
                                                &nbsp;@Html.RequiredHint()
                                            </span>*@
}
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Phone)</small>
                                    </div>

                                </div>
                    }
                            @if (Model.FaxEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Fax, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(m => m.Fax, new { @class = "textbox", @placeholder = "Fax Number" }) @if (Model.FaxRequired)
{
                                            @*<span>
                                                &nbsp; @Html.RequiredHint()
                                            </span>*@
}
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Fax)</small>
                                    </div>

                                </div>
                    }
                        </div>
            }
                    @if (Model.NewsletterEnabled || Model.CustomerAttributes.Count > 0)
            {

                        <div class="subheading">
                            @T("Account.Options")
                        </div>
                        <div class="form-horizontal">
                            @if (Model.NewsletterEnabled)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Newsletter, new { @class = "col-sm-2 control-label" }, ":")
                                    <div class="col-sm-12">
                                        @Html.EditorFor(model => model.Newsletter, new { @class = "textbox" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Newsletter)</small>
                                    </div>
                                </div>
                    }
                            @if (Model.CustomerAttributes.Count > 0)
                    {
                                @Html.Partial("_CustomerAttributes", Model.CustomerAttributes)
                    }
                        </div>
            }
                    @if (Model.AllowCustomersToSetTimeZone)
            {

                        <div class="subheading">
                            @T("Account.Preferences")
                        </div>
                        <div class="form-horizontal">
                            @if (Model.AllowCustomersToSetTimeZone)
                    {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TimeZoneId, new { @class = "col-sm-3 control-label" }, ":")
                                    <div class="col-sm-6">
                                        @Html.DropDownList("TimeZoneId", Model.AvailableTimeZones, new { @class = "textbox" })
                                        <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.TimeZoneId)</small>
                                    </div>
                                </div>
                    }
                        </div>
            }

                    @*<div class="subheading">
                        @T("Account.YourPassword")
                    </div>*@
                    <div class="form-horizontal">
                        <div class="form-group">
                            @*@Html.LabelFor(m => m.Password, new { @class = "col-sm-3 control-label" }, ":")*@

                            <div class="col-sm-12">
                                @*<div class="hedi"><p>PASSWORD</p></div>*@
                                @Html.PasswordFor(m => m.Password, new { @class = "textbox",@placeholder="PASSWORD" })@*&nbsp;@Html.RequiredHint()*@
                                <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.Password)</small>
                            </div>

                        </div>
                        <div class="form-group">
                            @*@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-3 control-label" }, ":")*@
                            <div class="col-sm-12">
                             @*<div class="hedi"><p>CONFIRM PASSWORD</p></div>*@
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "textbox", @placeholder = "CONFIRM PASSWORD" }) @*&nbsp; @Html.RequiredHint()*@
                                <small class="text-center text-danger">@Html.ValidationMessageFor(m => m.ConfirmPassword)</small>
                            </div>

                        </div>
                        @if (Model.DisplayCaptcha)
                {
                            <div class="form-group">
                                <div class="col-sm-offset-2 col-sm-8">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            </div>
                }
                        @if (Model.HoneypotEnabled)
                {
                            @Html.Raw(Html.GenerateHoneypotInput())
                }
                    </div>
                    @if (Model.AcceptPrivacyPolicyEnabled)
            {
                        <script type="text/javascript">
                    $(document).ready(function () {
                        $('#register-button').click(function () {
 				fbq('track', 'CompleteRegistration');
                            if ($('#accept-privacy-policy').is(':checked')) {
                                //do some stuff
                                return true;
                            }
                            else {
                                //just show validation errors, dont post
                                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                return false;
                            }
                        });
                    });
                        </script>
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-sm-offset-3 col-sm-8">
                                    <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                                    <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                                    <span class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })', 450, 500, true)">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                </div>
                            </div>
                        </div>
            }
                    <div class="form-group marginTop15">
                        <div class="text-center">
                            <input type="submit" id="register-button" class="btn-med" value="@T("Account.Register.Button")" name="register-button" />
                        </div>
                    </div>
                </div>

            </div>
    }
    </div>
</div>