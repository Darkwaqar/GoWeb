@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
}


    @if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
    {


        <div class="add-to-cart">
            @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
            {
                <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
            }
            @if (!Model.DisableBuyButton)
            {
                <div class="add-to-cart-panel">

                    @if (Model.AllowedQuantities.Count > 0)
                    {
                        <div class="qty-wrapper">
                            @Html.LabelFor(model => model.EnteredQuantity, new { @class = "qty-label" }, ":")
                            @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown" })
                        </div>
                    }
                    else
                    {

                      
                            <div class="qty-wrapper quantity">
                               

                                @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty-input" })

                                @*//when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)*@
                                <script type="text/javascript">
                                        $(document).ready(function () {
                                            $("#@Html.FieldIdFor(model => model.EnteredQuantity)").keydown(function (event) {
                                                if (event.keyCode == 13) {
                                                    $("#add-to-cart-button-@Model.ProductId").click();
                                                    return false;
                                                }
                                            });
                                        });
                                </script>
                            </div>
                       
                            }
                            @{
                                var addToCartText = "";
                                if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                                {
                                    addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                                }
                                else
                                {
                                    addToCartText = T("ShoppingCart.AddToCart").Text;
                                    if (Model.IsRental)
                                    {
                                        addToCartText = T("ShoppingCart.Rent").Text;
                                    }
                                    if (Model.AvailableForPreOrder)
                                    {
                                        addToCartText = T("ShoppingCart.PreOrder").Text;
                                    }
                                }
                                <button type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;"><span>@addToCartText</span></button>
                            }
                        </div>
                    }
                    @Html.Widget("productdetails_add_info", Model.ProductId)
                </div>

    }



    <script>


        (function () {

            $('.quantity input').attr('type', 'number');
            $('.quantity input').attr('min', '1');
            $('.quantity input').attr('step', '1');



            jQuery('<div class="quantity-nav"><div class="quantity-button quantity-up">+</div><div class="quantity-button quantity-down">-</div></div>').insertAfter('.quantity input');
            jQuery('.quantity').each(function () {
                var spinner = jQuery(this),
                    input = spinner.find('input[type="number"]'),
                    btnUp = spinner.find('.quantity-up'),
                    btnDown = spinner.find('.quantity-down'),
                    min = input.attr('min'),
                    max = input.attr('max');

                btnUp.click(function () {
                    var oldValue = parseFloat(input.val());
                    if (oldValue >= max) {
                        var newVal = oldValue;
                    } else {
                        var newVal = oldValue + 1;
                    }
                    spinner.find("input").val(newVal);
                    spinner.find("input").trigger("change");
                });

                btnDown.click(function () {
                    var oldValue = parseFloat(input.val());
                    if (oldValue <= min) {
                        var newVal = oldValue;
                    } else {
                        var newVal = oldValue - 1;
                    }
                    spinner.find("input").val(newVal);
                    spinner.find("input").trigger("change");
                });

            });


        })();








    </script>