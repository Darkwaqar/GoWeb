@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}

@Html.Widget("order_summary_content_before")


@if (Model.Warnings.Count > 0)
{
    <div class="message-error">
        <ul>
            @foreach (var warning in Model.Warnings)
            {
                <li>@warning</li>
            }
        </ul>
    </div>
}
@*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@





@using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data", id = "shopping-cart-form" }))
{
    @Html.AntiForgeryToken()


    <div class="col-md-12">
        <div class="order-summary-content">

            @if (Model.Items.Count > 0)
            {

                <div class="table-wrapper">
                    <table class="cart scroll">
                        <colgroup>
                            @*<col width="1" />
                                    @if (Model.IsEditable)
                                {
                                <col width="1" />
                                }
                                    @if (Model.ShowSku)
                                {
                                <col/>
                                }
                                    @if (Model.ShowProductImages)
                                {
                                <col width="1"  />
                                }*@
                            <col />
                            <col />
                            <col />
                            <col />

                        </colgroup>
                        <thead>
                            <tr class="cart-header-row">
                                @*<th>
                                        <span class="item-count">#</span>
                                    </th>
                                    @if (Model.IsEditable)
                                    {
                                    <th class="remove-from-cart" data-hide="w410, w480">
                                        @T("ShoppingCart.Remove")
                                    </th>
                                    }
                                        @if (Model.ShowSku)
                                    {
                                    <th class="sku" data-hide="w410, w480">
                                        @T("ShoppingCart.SKU")
                                    </th>
                                    }
                                        @if (Model.ShowProductImages)
                                    {
                                        <th class="product-picture">
                                            @T("ShoppingCart.Image")
                                        </th>
                                    }
                                    <th class="product" data-hide="w410, w480, w580, w768">
                                        @T("ShoppingCart.Product(s)")
                                    </th>
                                    <th class="unit-price" data-hide="w410, w480">
                                        @T("ShoppingCart.UnitPrice")
                                    </th>
                                    <th class="quantity">
                                        @T("ShoppingCart.Quantity")
                                    </th>
                                    <th class="subtotal">
                                        @T("ShoppingCart.ItemTotal")
                                    </th>*@


                                <th class=" head-table width-50">

                                    Item

                                </th>
                                <th class=" head-table width-15">
                                    Price (each)
                                </th>
                                <th class=" head-table width-15">
                                    Qty
                                </th>
                                <th class=" head-table width-10">
                                    Sub-total
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{var counter = 0;}
                            @foreach (var item in Model.Items)
                            {
                                counter++;
                            <tr class="cart-item-row">

                                @*@if (Model.IsEditable)
        {
            <td class="remove-from-cart">
                @if (item.DisableRemoval)
                {
                    <text>&nbsp;</text>
                }
                else
                {
                    <label class="td-title">@T("ShoppingCart.Remove"):</label>
                    <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                }
            </td>
        }*@
                                @*<td>
            <span class="item-count">@counter</span>
        </td>*@
                                @*@if (Model.IsEditable)
        {
            <td class="remove-from-cart">
            @if (item.DisableRemoval)
            {
               <text>&nbsp;</text>
            }
            else
            {
                <input id="remove_input_@(item.Id)" type="checkbox" name="removefromcart" value="@(item.Id)" />
                <label for="remove_input_@(item.Id)" class="td-title">@T("ShoppingCart.Remove")</label>
            }
            </td>
        }*@
                                @*@if (Model.ShowSku)
        {
            <td class="sku">
                <span class="sku-number">@item.Sku</span>
            </td>
        }*@
                                @*@if (Model.ShowProductImages)
        {
            <td class="product-picture">
                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
            </td>
        }*@
                                <td class="product">
                                    @*<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
            @if (!String.IsNullOrEmpty(item.AttributeInfo))
            {
                <div class="attributes">
                    @Html.Raw(item.AttributeInfo)
                </div>
            }
            @if (!String.IsNullOrEmpty(item.RecurringInfo))
            {
                <div class="recurring-info">
                    @Html.Raw(item.RecurringInfo)
                </div>
            }
            @if (!String.IsNullOrEmpty(item.RentalInfo))
            {
                <div class="rental-info">
                    @Html.Raw(item.RentalInfo)
                </div>
            }
            @if (Model.IsEditable && item.AllowItemEditing)
            {
                var editCartItemUrl = Url.RouteUrl("Product", new {SeName = item.ProductSeName});
                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                <div class="edit-item">
                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                </div>
            }
            @if (item.Warnings.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in item.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
            }*@

                                    <div class="col-md-12">
                                        <div class="col-md-3">

                                            @if (Model.ShowProductImages)
                                            {

                                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>

                                            }


                                        </div>

                                        <div class="col-md-6 list-product">
                                            <ul>
                                                <li class="title">
                                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                                </li>

                                                @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                                {
                                                    <li class="attributes">
                                                        @Html.Raw(item.AttributeInfo)
                                                    </li>
                                                }

                                                @if (Model.ShowSku)
                                                {
                                                    <li class="product-sku">
                                                        Product SKU:
                                                        <span class="sku-number">@item.Sku</span>
                                                    </li>
                                                }


                                            </ul>
                                            <div class="bottom-list">
                                                @if (Model.IsEditable && item.AllowItemEditing)
                                                {
                                                    var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                                    editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                                                    <div class="edit-item">
                                                        <a href="@editCartItemUrl">Edit</a>
                                                    </div>
                                                }
                                            </div>






                                        </div>

                                        <div class="col-md-3">
                                            @if (item.Warnings.Count > 0)
                                            {
                                                <div class="message-error">
                                                    <ul>
                                                        @foreach (var warning in item.Warnings)
                                                        {
                                                            <li>@warning</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        </div>

                                    </div>



                                </td>
                                <td class="unit-price width-15">

                                    <span class="product-unit-price">@item.UnitPrice</span>
                                </td>
                                <td class="quantity width-15">

                                    @if (Model.IsEditable)
                                    {
                                        if (item.AllowedQuantities.Count > 0)
                                        {
                                            <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                @foreach (var qty in item.AllowedQuantities)
                                                {
                                                    <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                }
                                            </select>
                                        }
                                        else
                                        {




                                            <div class="input-group basket-qty">
                                                <div class="input-group basket-qty">
                                                    <button class="btn btn-default btn-number decrease-qty" type="button" id="decrease-qty">
                                                        <span>-</span>
                                                    </button>
                                                    <input name="itemquantity@(item.Id)" type="number" value="@(item.Quantity)" class="form-control input-number" maxlength="2" minlength="1" />

                                                    <button class="btn btn-default btn-number increase-qty" type="button" id="increase-qty">
                                                        <span>+</span>
                                                    </button>
                                                </div>
                                            </div>







                                        }
                                    }
                                    else
                                    {
                                        <span class="product-quantity">@item.Quantity</span>
                                    }


                                    @*@if (Model.IsEditable)
            {

                <div class="remove">
                    <input id="remove_input_@(item.Id)" type="checkbox" name="removefromcart" value="@(item.Id)" />
                    <label for="remove_input_@(item.Id)" class="td-title">Remove</label>
                </div>



            }*@
                                    @if (Model.IsEditable)
                                    {
                                        if (item.DisableRemoval)
                                        {
                                            <text>&nbsp;</text>
                                        }
                                        else
                                        {<div class="remove">

                                                <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                                <label for="removefromcart" class="td-title">Remove</label>
                                            </div>
                                        }
                                    }


                               



                                </td>



                                <td class="subtotal width-10">

                                    <span class="product-subtotal">@item.SubTotal</span>
                                    @if (!String.IsNullOrEmpty(item.Discount))
                                    {
                                        <div class="discount">
                                            @T("ShoppingCart.ItemYouSave", item.Discount)
                                        </div>
                                        if (item.MaximumDiscountedQty.HasValue)
                                        {
                                            <div class="discount-additional-info">
                                                @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                            </div>
                                        }
                                    }



                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else

            {
                <div class="no-data">
                    @T("ShoppingCart.CartIsEmpty")
                </div>
            }
            @Html.Widget("order_summary_content_after")
        </div>


    </div>
    <div class="col-md-5">
        @if (Model.Items.Count > 0)
        {

            @Html.Widget("order_summary_cart_footer")
            if (Model.IsEditable)
            {
                <div class="cart-collaterals">
                    <div class="deals">
                        @Html.Partial("_DiscountBox", Model.DiscountBox)
                        @Html.Partial("_GiftCardBox", Model.GiftCardBox)
                        @Html.Widget("order_summary_content_deals")
                    </div>
                    @Html.Partial("EstimateShipping", Model.EstimateShipping)
                </div>
            }

        }

    </div>
    <div class="col-md-2"></div>
    <div class="col-md-5">

        <div class="cart-view">
            @if (Model.Items.Count > 0)
            {
                if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                {
                    var inclTax = EngineContext.Current.Resolve<IWorkContext>
                        ().TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <div class="tax-shipping-info">
                        @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </div>
                }
                <div class="cart-options">

                    @if (Model.IsEditable)
                    {
                        @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
                    }
                    @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                    {
                        <div class="selected-checkout-attributes">
                            @Html.Raw(Model.CheckoutAttributeInfo)
                        </div>
                    }
                </div>
                <div class="cart-footer">



                    <div class="totals">
                        @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
                        @if (Model.IsEditable)
                        {
                            if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                            {
                                <div class="min-amount-warning">
                                    @Model.MinOrderSubtotalWarning
                                </div>
                            }
                        }
                        @if (Model.IsEditable)
                        {
                            if (Model.TermsOfServiceOnShoppingCartPage)
                            {
                                @*<div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" >
                                        <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                                    </div>*@
                                <div class="terms-of-service checkbox">
                                    <input id="termsofservice" type="checkbox" name="termsofservice" />
                                    <label for="termsofservice">I have read and agree to the <a class="read" href="https://www.gomobishop.com/conditions-of-use" target="_blank" id="read-terms">terms of service</a>.</label>

                                    <div class="message-check">
                                        <div class="promocode-message">
                                            <p>Please accept terms of service before proceeding to the next step </p>
                                        </div>
                                    </div>
                                    <script>
								   @*$(document).ready(function() {
								       $('#read-terms').on('click', function(e) {
								           e.preventDefault();
								           displayPopupContentFromUrl('@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })', '@T("Checkout.TermsOfService")');
								       });
								   });*@
                                    </script>
                                </div>
                            }
                                <div class="checkout-buttons">
                                    @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
                                    {
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#checkout').click(function () {
                                                    //terms of service
                                                    var termOfServiceOk = true;
                                                    if ($('#termsofservice').length > 0) {
                                                        //terms of service element exists
                                                        if (!$('#termsofservice').is(':checked')) {
                                                            $(".message-check").css("display", "block");
                                                            termOfServiceOk = false;
                                                        } else {
                                                            termOfServiceOk = true;
                                                            $(".message-check").css("display", "none");
                                                        }
                                                    }
                                                    return termOfServiceOk;
                                                });
                                            });
                                        </script>

                                        @*<div class="message-check" style="display:block;">
                                            <div class="promocode-message">
                                                <p>We are not accepting any orders for now, as the website is going through routine maintenance.</p>
                                            </div>
                                        </div>*@
                                        @*<button type="submit" id="checkout" name="checkout" value="checkout" disabled class="button-1 checkout-button">
                                            <span>PROCEED TO PURCHASE</span>
                                        </button>*@
                                        <button id="temp" name="temp" type="button" class="button-1 checkout-button">
                                            <span>PROCEED TO PURCHASE</span>
                                        </button> 



                                    }

                                    @if (Model.IsEditable)
                                    {
                                        <div class="common-buttons">
                                            <button type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button">@T("ShoppingCart.UpdateCart")</button>
                                            <button type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-2 continue-shopping-button">@T("ShoppingCart.ContinueShopping")</button>
                                        </div>
                                    }


                                </div>
                            <div class="addon-buttons">
                                @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                @Html.Partial("_ButtonPaymentMethod", Model)
                            </div>
                        }
                    </div>
                </div>



            }


        </div>





        @*@if (Model.IsEditable)
            {
            @Html.Action("CrossSellProducts", "Product")
            }*@


    </div>





}


<script>
    (function () {

        $('.remove input[type="checkbox"]').css('opacity', 0);

        $('.remove ').on('click', function () {

            $(this).find("input[type='checkbox']").attr('checked', 'checked');
          
            $.confirm({
                title: 'Confirmation',
                content: 'Are you sure you want to remove the item from the list?',
                buttons: {
                    confirm: function () {
                        $('.common-buttons button[name="updatecart"]').trigger('click');
                    },
                    cancel: function () {

                    }
                    //somethingElse: {
                    //    text: 'Something else',
                    //    btnClass: 'btn-blue',
                    //    keys: ['enter', 'shift'],
                    //    action: function () {
                    //        $.alert('Something else?');
                    //    }
                    //}
                }
            });

        });


        $('#temp').on('click', function () {

            $.confirm({
                title: 'We are launching soon!',
                content: 'Subscribe to our newsletter and get a surprise gift',
                buttons: {
                    //confirm: function () {
                    //    $('.common-buttons button[name="updatecart"]').trigger('click');
                    //},
                    ////cancel: function () {

                    ////}
                    somethingElse: {
                        text: 'Ok',
                        btnClass: 'btn-blue',
                        keys: ['enter', 'shift'],
                        action: function () {
                         
                        }
                    }
                }
            });






        });

  















        $('.decrease-qty').on('click', function () {

            var num = +$(this).parent().find('input[type="number"]').val();
            if (num > 1) {
                $(this).parent().find('input[type="number"]').val(num - 1);
                $('.common-buttons button[name="updatecart"]').trigger('click');
            }

        });


        $('.increase-qty').on('click', function () {

            var num = +$(this).parent().find('input[type="number"]').val();

            $(this).parent().find('input[type="number"]').val(num + 1);
            $('.common-buttons button[name="updatecart"]').trigger('click');


        });

      





    })();








</script>
