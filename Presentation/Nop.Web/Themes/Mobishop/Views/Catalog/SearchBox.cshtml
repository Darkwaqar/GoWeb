@model SearchBoxModel
@using Nop.Web.Models.Catalog;
<div class="mf-expand__content" id="SeachDiv" data-mf-extarget="globalHeaderSearch" >

    @*<a onclick="SeachToggle()" class="mf-expand__handle--close search__close"></a>*@
    @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get, new { id = "small-search-box-form" }))
    {

        @Html.Widget("searchbox_before_search_button")
        if (Model.SearchTermMinimumLength > 0)
        {
            <script type="text/javascript">
            $("#small-search-box-form").submit(function(event) {
                if ($("#small-searchterms").val() == "") {
                    alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Search.EnterSearchTerms").Text))');
                    $("#small-searchterms").focus();
                    event.preventDefault();
                }
            });
            </script>
        }
        if (Model.AutoCompleteEnabled)
        {
            <text>
                <script type="text/javascript">
                $(document).ready(function() {
                    $('#small-searchterms').autocomplete({
                            delay: 500,
                            minLength: @(Model.SearchTermMinimumLength.ToString()),
                            source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                            appendTo: '.search-box',
                            select: function(event, ui) {
                                $("#small-searchterms").val(ui.item.label);
                                setLocation(ui.item.producturl);
                                return false;
                            }
                        })
                        .data("ui-autocomplete")._renderItem = function(ul, item) {
                            var t = item.label;
                            //html encode
                            t = htmlEncode(t);
                            return $("<li></li>")
                                .data("item.autocomplete", item)
                                .append("<a>@(Model.ShowProductImagesInSearchAutoComplete ? Html.Raw("<img src='\" + item.productpictureurl + \"'>") : null)<span>" + t + "</span></a>")
                                .appendTo(ul);
                        };
                });
                </script>
            </text>
        }
        @Html.Widget("searchbox")
        <input id="query" type="hidden" name="text" value="">
        <div class="header-search">
            <input type="text" class="search-input" id="small-searchterms" autocomplete="off" name="q" placeholder="I'm shopping for ..." />
            <button id="searchSubmit" class="search-button" type="submit"></button>
        </div>
    }

</div>



