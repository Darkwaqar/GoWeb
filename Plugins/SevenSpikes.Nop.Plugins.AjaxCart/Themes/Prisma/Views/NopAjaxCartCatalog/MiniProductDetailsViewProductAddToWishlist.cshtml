@** Copyright 2015 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@model Nop.Web.Models.Catalog.ProductDetailsModel.AddToCartModel

<div class="add-to-cart">
    @*@Html.LabelFor(model => model.EnteredQuantity, new { @class = "qty-label" }, ":")*@
    @if (Model.AllowedQuantities.Count > 0)
    {
    <div class="qty-wrapper">
        @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown" })
    </div>
    }
    else
    {
    <div class="qty-wrapper quantity">
      
        @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty-input" })

    </div>
    }

    <div class="btn-wrapper">
        <button type="button" id="add-to-cart-button-@Model.ProductId" value="@T("shoppingcart.addtowishlist")" class="button-1 add-to-cart-button miniProductDetailsViewAddToWishlistButton miniProductDetailsViewAddToCartButton" data-productid="@Model.ProductId"><span>@T("shoppingcart.addtowishlist")</span></button>
    </div>
        @Html.Hidden("addProductVariantToCartUrl", Url.Action("AddProductFromProductDetailsPageToCartAjax", "NopAjaxCartShoppingCart"))
</div>


<script>


        (function () {

            $('.quantity input').attr('type', 'number');
            $('.quantity input').attr('min', '1');
            $('.quantity input').attr('step', '1');



            jQuery('<div class="quantity-nav"><div class="quantity-button quantity-up">+</div><div class="quantity-button quantity-down">-</div></div>').insertAfter('.quantity input');
            jQuery('.quantity').each(function () {
                var spinner = jQuery(this),
                    input = spinner.find('input[type="number"]'),
                    btnUp = spinner.find('.quantity-up'),
                    btnDown = spinner.find('.quantity-down'),
                    min = input.attr('min'),
                    max = input.attr('max');

                btnUp.click(function () {
                    var oldValue = parseFloat(input.val());
                    if (oldValue >= max) {
                        var newVal = oldValue;
                    } else {
                        var newVal = oldValue + 1;
                    }
                    spinner.find("input").val(newVal);
                    spinner.find("input").trigger("change");
                });

                btnDown.click(function () {
                    var oldValue = parseFloat(input.val());
                    if (oldValue <= min) {
                        var newVal = oldValue;
                    } else {
                        var newVal = oldValue - 1;
                    }
                    spinner.find("input").val(newVal);
                    spinner.find("input").trigger("change");
                });

            });


        })();








</script>